{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LayoutHeader from '@/components/layout/LayoutHeader.vue';\nexport default {\n  name: 'App',\n  components: {\n    LayoutHeader\n  },\n  computed: {\n    userInfo() {\n      // 로그인 성공 여부 & 에러 메시지\n      return this.$store.state.auth.userInfo;\n    }\n  },\n  created() {\n    // 1차적으로 login 확인(UI 접근 차단). 토큰 만료시 서버에서 로그인으로 리다이렉트  \n    this.$store.dispatch(\"auth/userInfo\").then(() => {\n      // 일단 호출 먼저 진행\n      if (this.userInfo == null) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push({\n          path: '/login'\n        });\n      }\n      // 실패하던 성공하던 한번만 세팅 되어야함\n    }).catch(error => {\n      // userInfo 호출 실패\n      console.log(error);\n      // 실패하던 성공하던 한번만 세팅 되어야함\n    });\n  }\n};","map":{"version":3,"mappings":";AAUA,OAAOA,YAAW,MAAO,sCAAqC;AAE9D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAS,EAAI;IACXF;EACF,CAAC;EACDG,QAAQ,EAAE;IACRC,QAAQ,GAAG;MACT;MACA,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACH,QAAQ;IACxC;EACF,CAAC;EACDI,OAAO,GAAE;IACP;IACA,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,eAAe,CAAC,CAACC,IAAI,CAAC,MAAM;MAEjD;MACA,IAAG,IAAI,CAACN,QAAO,IAAK,IAAI,EAAC;QACvBO,KAAK,CAAC,aAAa,CAAC;QACpB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAACC,IAAI,EAAC;QAAQ,CAAC,CAAC;MACpC;MACA;IACA,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;MAChB;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACJ;AACF","names":["LayoutHeader","name","components","computed","userInfo","$store","state","auth","created","dispatch","then","alert","$router","push","path","catch","error","console","log"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\layouts\\PageLayout.vue"],"sourcesContent":["<template>\r\n  <LayoutHeader />\r\n  <div class=\"contents\">\r\n    <div class=\"content_box\" v-if=\"this.userInfo.loginId != null\">\r\n      <router-view></router-view>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LayoutHeader from '@/components/layout/LayoutHeader.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components : {\r\n    LayoutHeader,\r\n  },\r\n  computed: {\r\n    userInfo() {\r\n      // 로그인 성공 여부 & 에러 메시지\r\n      return this.$store.state.auth.userInfo;\r\n    }\r\n  },\r\n  created(){\r\n    // 1차적으로 login 확인(UI 접근 차단). 토큰 만료시 서버에서 로그인으로 리다이렉트  \r\n    this.$store.dispatch(\"auth/userInfo\").then(() => {            \r\n    \r\n    // 일단 호출 먼저 진행\r\n    if(this.userInfo == null){\r\n      alert(\"로그인이 필요합니다.\");\r\n      this.$router.push({path:'/login'});\r\n    }\r\n    // 실패하던 성공하던 한번만 세팅 되어야함\r\n    }).catch(error => {\r\n      // userInfo 호출 실패\r\n      console.log(error);\r\n      // 실패하던 성공하던 한번만 세팅 되어야함\r\n    });\r\n  },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}