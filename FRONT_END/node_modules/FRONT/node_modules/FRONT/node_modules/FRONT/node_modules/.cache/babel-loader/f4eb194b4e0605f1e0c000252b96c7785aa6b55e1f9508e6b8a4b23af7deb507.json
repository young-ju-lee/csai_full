{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/images/img_logo_01.png';\nconst _hoisted_1 = {\n  class: \"login_box\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"login_visual\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logo\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Kt OSS\"\n}), /*#__PURE__*/_createElementVNode(\"p\", null, \"AI 비대면 자가조치\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"login_form\"\n};\nconst _hoisted_4 = {\n  class: \"form_box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_login_form = _resolveComponent(\"login-form\");\n  const _component_login_otp = _resolveComponent(\"login-otp\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" login_box \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" login_visual \"), _hoisted_2, _createCommentVNode(\"// login_visual \"), _createCommentVNode(\" login_form \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [this.uiToggleNum == 1 ? (_openBlock(), _createBlock(_component_login_form, {\n    key: 0,\n    onSetUiToggleNum: $options.setUiToggleNum\n  }, null, 8 /* PROPS */, [\"onSetUiToggleNum\"])) : _createCommentVNode(\"v-if\", true), this.uiToggleNum == 2 ? (_openBlock(), _createBlock(_component_login_otp, {\n    key: 1,\n    onSetUiToggleNum: $options.setUiToggleNum\n  }, null, 8 /* PROPS */, [\"onSetUiToggleNum\"])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\"// login_form \")]), _createCommentVNode(\"// login_box \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";OAMaA,UAAqC;;EAJ5CC,KAAK,EAAC;AAAW;gCAEnBC,oBAKM;EALDD,KAAK,EAAC;AAAc,iBACvBC,oBAGM;EAHDD,KAAK,EAAC;AAAM,iBACfC,oBAAwD;EAAnDC,GAAqC,EAArCH,UAAqC;EAACI,GAAG,EAAC;iBAC/CF,oBAAkB,WAAf,aAAW;;EAMbD,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAU;;;;6DAbtBI,kCAAkB,EACnBH,oBAkBO,OAlBPI,UAkBO,GAjBJD,qCAAqB,EACrBE,UAKM,EACNF,uCAAuB,EAEvBA,mCAAmB,EACnBH,oBAKM,OALNM,UAKM,GAJPN,oBAGS,OAHTO,UAGS,QAFmBC,WAAW,uBAAlCC,aAA4EC;;IAAlCC,gBAAc,EAAEC;2FACpCJ,WAAW,uBAAjCC,aAA2EI;;IAAlCF,gBAAc,EAAEC;0FAG7DT,qCAAqB,IAExBA,oCAAoB","names":["_imports_0","class","_createElementVNode","src","alt","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","uiToggleNum","_createBlock","_component_login_form","onSetUiToggleNum","$options","_component_login_otp"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\views\\pages\\auth\\Login.vue"],"sourcesContent":["<template>\r\n  <!-- login_box -->\r\n\t<div class=\"login_box\">\r\n    <!-- login_visual -->\r\n    <div class=\"login_visual\">\r\n      <div class=\"logo\">\r\n        <img src=\"@/assets/images/img_logo_01.png\" alt=\"Kt OSS\">\r\n        <p>AI 비대면 자가조치</p>\r\n      </div>\r\n    </div>\r\n    <!--// login_visual -->\r\n\r\n    <!-- login_form -->\r\n    <div class=\"login_form\">\r\n\t\t\t<div class=\"form_box\">\r\n        <login-form v-if=\"this.uiToggleNum == 1\" @setUiToggleNum=\"setUiToggleNum\" />\r\n        <login-otp v-if=\"this.uiToggleNum == 2\" @setUiToggleNum=\"setUiToggleNum\" />\r\n      </div>\r\n    </div>\r\n    <!--// login_form -->\r\n  </div>\r\n\t<!--// login_box -->\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './LoginForm.vue';\r\nimport LoginOtp from './LoginOtp.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    LoginOtp\r\n  },\r\n  data() {\r\n    return {\r\n      uiToggleNum : 1, // #TOFIX 임시 화면 전환용\r\n      devtest : false, // #TODEL 개발 완료시 삭제 필요\r\n    }\r\n  },\r\n  computed: {\r\n    userLoginData() {\r\n      // 로그인 성공 여부 & 에러 메시지\r\n      return this.$store.state.auth.userLoginData;\r\n    },\r\n    userInfo() {\r\n\t\t// 로그인 성공 여부 & 에러 메시지\r\n\t\treturn this.$store.state.auth.userInfo;\r\n\t\t}\r\n  },\r\n  created() {\r\n    // #TODEL test용 - 기본값 false\r\n\r\n    if(process.env.VUE_APP_MODE == \"test\"){\r\n      this.devtest = true;\r\n    }\r\n  },\r\n  methods: {\r\n    // Login - Otp 화면 전환\r\n    setUiToggleNum(num , type) {\r\n      // 화면 none-block 처리\r\n      this.uiToggleNum = num\r\n\r\n      if(type == \"pass\"){\r\n        // OTP 화면 전환시\r\n        if(this.uiToggleNum == 2){\r\n          // if : OTP(2) 화면일 경우 검증 로직 실행\r\n          if(this.userLoginData.resultCode != 1){\r\n            // if : Login 성공이 아닌 상태에서 진입 시\r\n            // 로그인 UI로 다시 변경\r\n            alert(\"잘못된 접근입니다.\");\r\n            this.uiToggleNum = 1;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    loginChecker(){\r\n      this.$store.dispatch(\"auth/userInfo\").then(() => {            \r\n        if(this.userInfo != null){\r\n          this.$router.push({path:'/alarm'});\r\n        }\r\n      }).catch(error => {\r\n        // userInfo 호출 실패\r\n        console.log(error);\r\n        // 실패하던 성공하던 한번만 세팅 되어야함\r\n      });\r\n    },\r\n  },\r\n  mounted(){\r\n    // 기존 로그인 확인\r\n    this.loginChecker();\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}