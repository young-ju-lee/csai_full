{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"chat_state bg_st02\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"fc_st02\",\n  style: {\n    \"text-align\": \"center\",\n    \"padding\": \"10px\",\n    \"background\": \"#f0f4f5\"\n  }\n}, \"상담시 개인정보가 유출되지 않도록 유의해 주시기 바랍니다\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"id\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"get\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 2,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  class: \"time\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"send\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"dt\", null, null, -1 /* HOISTED */);\nconst _hoisted_14 = {\n  class: \"time\"\n};\nconst _hoisted_15 = [\"innerHTML\"];\nconst _hoisted_16 = {\n  key: 1,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  key: 2,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_19 = [\"src\", \"alt\"];\nconst _hoisted_20 = {\n  key: 0,\n  class: \"get\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_22 = [\"innerHTML\"];\nconst _hoisted_23 = {\n  key: 1,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_24 = [\"src\"];\nconst _hoisted_25 = {\n  key: 2,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_26 = [\"src\", \"onClick\"];\nconst _hoisted_27 = {\n  class: \"time\"\n};\nconst _hoisted_28 = {\n  key: 1,\n  class: \"send\"\n};\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"dt\", null, null, -1 /* HOISTED */);\nconst _hoisted_30 = {\n  class: \"time\"\n};\nconst _hoisted_31 = [\"innerHTML\"];\nconst _hoisted_32 = {\n  key: 1,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_33 = [\"src\", \"onClick\"];\nconst _hoisted_34 = {\n  key: 2,\n  class: \"msg\",\n  style: {\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_35 = [\"src\", \"alt\", \"onClick\"];\nconst _hoisted_36 = {\n  key: 2,\n  class: \"error\"\n};\nconst _hoisted_37 = [\"innerHTML\"];\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"ul\", {\n  style: {\n    \"display\": \"none\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"button\", null, \"알림톡 재전송\")])], -1 /* HOISTED */);\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"chat_wait\"\n}, [/*#__PURE__*/_createTextVNode(\" 상담 대상자가 아직 메시지를 확인하지 않았습니다.\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" 10분동안 상담이 시작되지 않으면 상담이 종료됩니다. \")], -1 /* HOISTED */);\nconst _hoisted_40 = [_hoisted_39];\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"chat_hold\"\n}, \" 상담이 보류되었습니다. \", -1 /* HOISTED */);\nconst _hoisted_42 = [_hoisted_41];\nconst _hoisted_43 = {\n  class: \"chat_input_group\"\n};\nconst _hoisted_44 = [\"onClick\"];\nconst _hoisted_45 = {\n  class: \"chat_ctrl_group\"\n};\nconst _hoisted_46 = [\"onClick\"];\nconst _hoisted_47 = [\"onClick\"];\nconst _hoisted_48 = {\n  class: \"layer_popup\"\n};\nconst _hoisted_49 = {\n  class: \"reservation_box\"\n};\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"예약일시 입력\", -1 /* HOISTED */);\nconst _hoisted_51 = {\n  class: \"layer_box\"\n};\nconst _hoisted_52 = /*#__PURE__*/_createElementVNode(\"dl\", {\n  class: \"dl_st_01\"\n}, [/*#__PURE__*/_createElementVNode(\"dt\", null, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"user_id\"\n}, \"예약일\")]), /*#__PURE__*/_createElementVNode(\"dd\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"date\",\n  class: \"input_st_01\",\n  id: \"reservation_date\",\n  placeholder: \"예약일\",\n  value: \"이준영\"\n})])], -1 /* HOISTED */);\nconst _hoisted_53 = /*#__PURE__*/_createElementVNode(\"dt\", null, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"user_pw\"\n}, \"예약 시간\")], -1 /* HOISTED */);\nconst _hoisted_54 = {\n  class: \"reservation_select\",\n  id: \"reservation_time\"\n};\nconst _hoisted_55 = [\"value\"];\nconst _hoisted_56 = {\n  class: \"error_txt\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.consultTarget.consultArray, (item1, idx1) => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      class: \"group_item chat_item\",\n      key: idx1\n    }, [_createElementVNode(\"h1\", null, [_createTextVNode(_toDisplayString(item1.cust_nm != null ? $options.StringUtil().cusNmFormatter(item1.cust_nm) : '이름없음') + \"님과의 상담창 \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString($options.StringUtil().dateFormatter1(item1.consult_datetime)) + \" ~\", 1 /* TEXT */)]), item1.user_key == '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"상담대기\")) : _createCommentVNode(\"v-if\", true), item1.user_key != '' ? (_openBlock(), _createElementBlock(\"p\", {\n      key: 1,\n      class: _normalizeClass('chat_state bg_st_' + item1.cnvrst_sttus)\n    }, _toDisplayString(item1.cnvrst_sttus == 'S' ? '상담보류' : item1.cnvrst_sttus == 'A' ? '진행중' : '대기중'), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _hoisted_2, _createElementVNode(\"div\", {\n      class: _normalizeClass('chat_box oy_s ' + ($data.isDragging ? 'drag' : '')),\n      id: 'chat_box_' + item1.id,\n      onDrop: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.dropInputTag && $options.dropInputTag(...args), [\"prevent\"])),\n      onDragover: [_cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])), _cache[3] || (_cache[3] = (...args) => $options.dragover && $options.dragover(...args))],\n      onDragleave: _cache[4] || (_cache[4] = (...args) => $options.dragleave && $options.dragleave(...args))\n    }, [_createElementVNode(\"input\", {\n      ref_for: true,\n      ref: \"image\",\n      id: \"input\",\n      type: \"file\",\n      name: \"image\",\n      onChange: _cache[0] || (_cache[0] = $event => $options.uploadImage(this)),\n      style: {\n        \"visibility\": \"hidden\",\n        \"display\": \"none\"\n      }\n    }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createCommentVNode(\" 이력 추가되는 부분 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item1.histArray, (item, idx) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: idx\n      }, [item.sender_type == 'CT' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"dl\", null, [_createElementVNode(\"dt\", null, [_createTextVNode(_toDisplayString(item1.cust_nm != null ? $options.StringUtil().cusNmFormatter(item1.cust_nm) : '이름없음'), 1 /* TEXT */), _hoisted_5, _createTextVNode(\"고객\")]), item.content_type != 'IM' && item.content_type != 'VI' ? (_openBlock(), _createElementBlock(\"dd\", {\n        key: 0,\n        class: \"msg\",\n        innerHTML: item.content.replace(/\\n/gi, '<br>')\n      }, null, 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true), item.content_type == 'VI' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_7, [_createElementVNode(\"embed\", {\n        src: 'data:video/mp4;base64,' + item.content,\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\",\n          \"cursor\": \"pointer\",\n          \"min-height\": \"400px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_8)])) : _createCommentVNode(\"v-if\", true), item.content_type == 'IM' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_9, [_createElementVNode(\"img\", {\n        src: 'data:image/jpeg;base64,' + item.content,\n        alt: \"\",\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_10)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"dd\", _hoisted_11, _toDisplayString(item.chat_time), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), item.sender_type == 'CS' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"dl\", null, [_hoisted_13, _createElementVNode(\"dd\", _hoisted_14, _toDisplayString(item.chat_time), 1 /* TEXT */), item.content_type == 'TX' ? (_openBlock(), _createElementBlock(\"dd\", {\n        key: 0,\n        class: \"msg\",\n        innerHTML: item.content.replace(/\\n/gi, '<br>')\n      }, null, 8 /* PROPS */, _hoisted_15)) : _createCommentVNode(\"v-if\", true), item.content_type == 'IM-BASE64' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_16, [_createElementVNode(\"img\", {\n        src: item.file_name + ',' + item.content,\n        alt: \"\",\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_17)])) : _createCommentVNode(\"v-if\", true), item.content_type == 'IM' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_18, [_createElementVNode(\"img\", {\n        src: '/nas/' + item.content,\n        alt: item.file_name,\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_19)])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 상담 추가되는 부분 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.consultTarget.reiveMessgeArray[idx1], (item, idx) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: idx\n      }, [item.sender_type == 'CT' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"dl\", null, [_createElementVNode(\"dt\", null, [_createTextVNode(_toDisplayString(item1.cust_nm != null ? $options.StringUtil().cusNmFormatter(item1.cust_nm) : '이름없음'), 1 /* TEXT */), _hoisted_21, _createTextVNode(\"고객\")]), item.content_type != 'IM' && item.content_type != 'VI' ? (_openBlock(), _createElementBlock(\"dd\", {\n        key: 0,\n        class: \"msg\",\n        innerHTML: item.content.replace(/\\n/gi, '<br>')\n      }, null, 8 /* PROPS */, _hoisted_22)) : _createCommentVNode(\"v-if\", true), item.content_type == 'VI' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_23, [_createElementVNode(\"embed\", {\n        src: 'data:video/mp4;base64,' + item.content,\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\",\n          \"cursor\": \"pointer\",\n          \"min-height\": \"400px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_24)])) : _createCommentVNode(\"v-if\", true), item.content_type == 'IM' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_25, [_createElementVNode(\"img\", {\n        src: 'data:image/jpeg;base64,' + item.content,\n        onClick: $event => {\n          this.$emit('showImg', 'data:image/jpeg;base64,' + item.content, 'IM-BASE64');\n        },\n        alt: \"\",\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\",\n          \"cursor\": \"pointer\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_26)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"dd\", _hoisted_27, _toDisplayString(item.chat_time), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), item.sender_type == 'CS' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"dl\", null, [_hoisted_29, _createElementVNode(\"dd\", _hoisted_30, _toDisplayString(item.chat_time), 1 /* TEXT */), item.content_type == 'TX' ? (_openBlock(), _createElementBlock(\"dd\", {\n        key: 0,\n        class: \"msg\",\n        innerHTML: $options.StringUtil().cleanXSS(item.content.replace(/\\n/gi, '<br>'))\n      }, null, 8 /* PROPS */, _hoisted_31)) : _createCommentVNode(\"v-if\", true), item.content_type == 'IM-BASE64' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_32, [_createElementVNode(\"img\", {\n        src: item.file_name + ',' + item.content,\n        onClick: $event => {\n          this.$emit('showImg', 'data:image/jpeg;base64,' + item.content, 'IM-BASE64');\n        },\n        alt: \"\",\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_33)])) : _createCommentVNode(\"v-if\", true), item.content_type == 'IM' ? (_openBlock(), _createElementBlock(\"dd\", _hoisted_34, [_createElementVNode(\"img\", {\n        src: item.content,\n        alt: item.file_name,\n        style: {\n          \"width\": \"100%\",\n          \"border-radius\": \"5px\",\n          \"margin-top\": \"5px\"\n        },\n        onClick: $event => {\n          this.$emit('showImg', item.content, 'IM-RESEND');\n        }\n      }, null, 8 /* PROPS */, _hoisted_35)])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true), item.sender_type == 'NT' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [_createElementVNode(\"p\", {\n        innerHTML: item.content\n      }, null, 8 /* PROPS */, _hoisted_37), _hoisted_38])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_3), _withDirectives(_createElementVNode(\"div\", null, _hoisted_40, 512 /* NEED_PATCH */), [[_vShow, item1.cnvrst_sttus == 'W']]), _withDirectives(_createElementVNode(\"div\", null, _hoisted_42, 512 /* NEED_PATCH */), [[_vShow, item1.cnvrst_sttus == 'S']]), _withDirectives(_createElementVNode(\"div\", _hoisted_43, [_withDirectives(_createElementVNode(\"textarea\", {\n      class: \"chat_input\",\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.message = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n      class: \"chat_button\",\n      onClick: $event => $options.sendMessage(item1)\n    }, \"전송\", 8 /* PROPS */, _hoisted_44)], 512 /* NEED_PATCH */), [[_vShow, item1.cnvrst_sttus == 'A']]), _withDirectives(_createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", {\n      onClick: $event => $options.setConsultStatus(item1, 1, idx1)\n    }, _toDisplayString(item1.cnvrst_sttus == 'S' ? '보류해제' : '상담보류'), 9 /* TEXT, PROPS */, _hoisted_46), _createElementVNode(\"li\", {\n      class: \"bg_st_R\",\n      onClick: $event => $options.showReservation(item1)\n    }, \"예약일시 입력\", 8 /* PROPS */, _hoisted_47), _createCommentVNode(\" <li @click=\\\"setConsultStatus(item1, 2, idx1)\\\">상담완료</li> \")])], 512 /* NEED_PATCH */), [[_vShow, item1.cnvrst_sttus != 'W']])])), [[_vShow, $options.consultTarget.currTargetIdx == item1.id]]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_hoisted_50, _createElementVNode(\"div\", _hoisted_51, [_hoisted_52, _createElementVNode(\"dl\", null, [_hoisted_53, _createElementVNode(\"dd\", null, [_createElementVNode(\"select\", _hoisted_54, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.reservationDate, (item, idx) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idx,\n      value: item.value\n    }, _toDisplayString(item.value), 9 /* TEXT, PROPS */, _hoisted_55);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.setConsultReservation && $options.setConsultReservation(...args))\n  }, \"저장\"), _createElementVNode(\"p\", _hoisted_56, _toDisplayString($data.errorTxt), 1 /* TEXT */)]), _createElementVNode(\"p\", {\n    class: \"layer_close\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeReservation && $options.closeReservation(...args))\n  })])], 512 /* NEED_PATCH */), [[_vShow, $data.show_reservation]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_hoisted_39","_hoisted_41","for","type","id","placeholder","value","_createElementBlock","_Fragment","$options","consultArray","item1","idx1","key","cust_nm","cusNmFormatter","dateFormatter1","consult_datetime","user_key","_hoisted_1","cnvrst_sttus","_hoisted_2","$data","onDrop","onDragover","onDragleave","ref","name","onChange","_createCommentVNode","histArray","item","idx","sender_type","_hoisted_4","_hoisted_5","content_type","innerHTML","content","replace","_hoisted_7","src","_hoisted_9","alt","_hoisted_11","chat_time","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_16","file_name","_hoisted_18","reiveMessgeArray","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_25","onClick","$emit","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","cleanXSS","_hoisted_32","_hoisted_34","_hoisted_36","_hoisted_38","_hoisted_43","_hoisted_45","currTargetIdx","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_56"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\views\\pages\\consult\\ConsultChat.vue"],"sourcesContent":["<template>\r\n  <div class=\"group_item chat_item\" v-for=\"(item1, idx1) in consultTarget.consultArray\" :key=\"idx1\" v-show=\"consultTarget.currTargetIdx == item1.id\">\r\n    <h1>{{item1.cust_nm != null ? StringUtil().cusNmFormatter(item1.cust_nm) : '이름없음' }}님과의 상담창 <span>{{StringUtil().dateFormatter1(item1.consult_datetime)}} ~</span></h1>\r\n    <p class=\"chat_state bg_st02\"  v-if=\"item1.user_key == ''\">상담대기</p>\r\n    <p :class=\"'chat_state bg_st_' + item1.cnvrst_sttus\" v-if=\"item1.user_key != ''\">\r\n      {{ item1.cnvrst_sttus == 'S' ? '상담보류' : (item1.cnvrst_sttus == 'A' ? '진행중' : '대기중')}}\r\n    </p>\r\n    <div class=\"fc_st02\" style=\"text-align:center; padding:10px; background:#f0f4f5;\">상담시 개인정보가 유출되지 않도록 유의해 주시기 바랍니다</div>\r\n    <div \r\n      :class=\"'chat_box oy_s ' + (isDragging ? 'drag':'')\" \r\n      :id=\"'chat_box_' + item1.id\"\r\n      @drop.prevent=\"dropInputTag\"\r\n      @dragover.prevent\r\n      @dragover=\"dragover\"\r\n      @dragleave=\"dragleave\"\r\n    >\r\n      <input ref=\"image\" id=\"input\" type=\"file\" name=\"image\" @change=\"uploadImage(this)\" style=\"visibility: hidden; display:none;\">\r\n      <!-- 이력 추가되는 부분 -->\r\n      <div v-for=\"(item, idx) in item1.histArray\" :key=\"idx\">\r\n        <div class=\"get\" v-if=\"item.sender_type == 'CT'\">\r\n          <dl>\r\n            <dt>{{item1.cust_nm != null ? StringUtil().cusNmFormatter(item1.cust_nm) : '이름없음' }}<br>고객</dt>\r\n            <dd class=\"msg\" v-html=\"item.content.replace(/\\n/gi, '<br>')\" v-if=\"item.content_type != 'IM' && item.content_type != 'VI'\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'VI'\"><embed :src=\"'data:video/mp4;base64,' + item.content\" style=\"width:100%; border-radius: 5px; margin-top: 5px; cursor: pointer; min-height:400px\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'IM'\"><img :src=\"'data:image/jpeg;base64,' + item.content\" alt=\"\" style=\"width:100%; border-radius: 5px; margin-top: 5px;\"></dd>\r\n            <dd class=\"time\">{{item.chat_time}}</dd>\r\n          </dl>\r\n        </div>\r\n        <div class=\"send\" v-if=\"item.sender_type == 'CS'\">\r\n          <dl>\r\n            <dt></dt>\r\n            <dd class=\"time\">{{item.chat_time}}</dd>\r\n            <dd class=\"msg\" v-html=\"item.content.replace(/\\n/gi, '<br>')\" v-if=\"item.content_type == 'TX'\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'IM-BASE64'\"><img :src=\"item.file_name + ',' + item.content\" alt=\"\" style=\"width:100%; border-radius: 5px; margin-top: 5px;\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'IM'\"><img :src=\"'/nas/' + item.content\" :alt=\"item.file_name\" style=\"width:100%; border-radius: 5px; margin-top: 5px;\"></dd>\r\n          </dl>\r\n        </div>\r\n      </div>\r\n      <!-- 상담 추가되는 부분 -->\r\n      <div v-for=\"(item, idx) in consultTarget.reiveMessgeArray[idx1]\" :key=\"idx\">\r\n        <div class=\"get\" v-if=\"item.sender_type == 'CT'\">\r\n          <dl>\r\n            <dt>{{item1.cust_nm != null ? StringUtil().cusNmFormatter(item1.cust_nm) : '이름없음' }}<br>고객</dt>\r\n            <dd class=\"msg\" v-html=\"item.content.replace(/\\n/gi, '<br>')\" v-if=\"item.content_type != 'IM' && item.content_type != 'VI'\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'VI'\"><embed :src=\"'data:video/mp4;base64,' + item.content\" style=\"width:100%; border-radius: 5px; margin-top: 5px; cursor: pointer; min-height:400px\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'IM'\"><img :src=\"'data:image/jpeg;base64,' + item.content\" @click=\"this.$emit('showImg', 'data:image/jpeg;base64,' + item.content, 'IM-BASE64');\" alt=\"\" style=\"width:100%; border-radius: 5px; margin-top: 5px; cursor: pointer;\"></dd>\r\n            <dd class=\"time\">{{item.chat_time}}</dd>\r\n          </dl>\r\n        </div>\r\n        <div class=\"send\" v-if=\"item.sender_type == 'CS'\">\r\n          <dl>\r\n            <dt></dt>\r\n            <dd class=\"time\">{{item.chat_time}}</dd>\r\n            <dd class=\"msg\" v-html=\"StringUtil().cleanXSS(item.content.replace(/\\n/gi, '<br>'))\" v-if=\"item.content_type == 'TX'\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'IM-BASE64'\"><img :src=\"item.file_name + ',' + item.content\" @click=\"this.$emit('showImg', 'data:image/jpeg;base64,' + item.content, 'IM-BASE64');\" alt=\"\" style=\"width:100%; border-radius: 5px; margin-top: 5px;\"></dd>\r\n            <dd class=\"msg\" style=\"text-align: center;\" v-if=\"item.content_type == 'IM'\"><img :src=\"item.content\" :alt=\"item.file_name\" style=\"width:100%; border-radius: 5px; margin-top: 5px;\" @click=\"this.$emit('showImg', item.content, 'IM-RESEND');\"></dd>\r\n          </dl>\r\n        </div>\r\n        <div class=\"error\" v-if=\"item.sender_type == 'NT'\">\r\n          <p v-html=\"item.content\"></p>\r\n          <ul style=\"display:none\">\r\n            <li><button>알림톡 재전송</button></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"item1.cnvrst_sttus == 'W'\">\r\n      <p class=\"chat_wait\">\r\n        상담 대상자가 아직 메시지를 확인하지 않았습니다.<br>\r\n        10분동안 상담이 시작되지 않으면 상담이 종료됩니다.\r\n      </p>\r\n    </div>\r\n    <div v-show=\"item1.cnvrst_sttus == 'S'\">\r\n      <p class=\"chat_hold\">\r\n        상담이 보류되었습니다.\r\n      </p>\r\n    </div>\r\n    <div class=\"chat_input_group\" v-show=\"item1.cnvrst_sttus == 'A'\">\r\n      <textarea class=\"chat_input\" v-model=\"message\"></textarea>\r\n      <button class=\"chat_button\" @click=\"sendMessage(item1)\">전송</button>\r\n    </div>\r\n    <div class=\"chat_ctrl_group\" v-show=\"item1.cnvrst_sttus != 'W'\">\r\n      <ul>\r\n        <li @click=\"setConsultStatus(item1, 1, idx1)\">{{ item1.cnvrst_sttus == 'S' ? '보류해제' : '상담보류'}}</li>\r\n        <li class=\"bg_st_R\" @click=\"showReservation(item1)\">예약일시 입력</li>\r\n        <!-- <li @click=\"setConsultStatus(item1, 2, idx1)\">상담완료</li> -->\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div class=\"layer_popup\" v-show=\"show_reservation\">\r\n    <div class=\"reservation_box\">\r\n      <h1>예약일시 입력</h1>\r\n      <div class=\"layer_box\">\r\n        <dl class=\"dl_st_01\">\r\n          <dt><label for=\"user_id\">예약일</label></dt>\r\n          <dd>\r\n            <input type=\"date\" class=\"input_st_01\" id=\"reservation_date\" placeholder=\"예약일\" value=\"이준영\">\r\n          </dd>\r\n        </dl>\r\n        <dl>\r\n          <dt><label for=\"user_pw\">예약 시간</label></dt>\r\n          <dd>\r\n            <select class=\"reservation_select\" id=\"reservation_time\">\r\n              <option v-for=\"(item, idx) in reservationDate\" :key=\"idx\" :value=\"item.value\">{{item.value}}</option>\r\n            </select>\r\n          </dd>\r\n        </dl>\r\n        <button @click=\"setConsultReservation\">저장</button>\r\n        <p class=\"error_txt\">{{errorTxt}}</p>\r\n      </div>\r\n      <p class=\"layer_close\" @click=\"closeReservation\"></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import Stomp from 'webstomp-client';\r\n  import SockJS from 'sockjs-client';\r\n  import StringUtil from '../../../utils/StringUtil';\r\n  \r\n  export default {\r\n    name: 'ConsultChat',\r\n    emits : [\"getConsulting\", \"showImg\"],\r\n    data() {\r\n      return {\r\n        message: \"\",\r\n        recvList: [],\r\n        user_key: \"\",\r\n        imgPathUrl : \"\",\r\n        file_name : \"\",\r\n        isDragging : false,\r\n        reConnectCnt : 0,        \r\n        reporterOpinion : \"\",     //신고내용\r\n        socketArray : [],\r\n        show_reservation : false,\r\n        reservationDate : [\r\n          {value:\"09:00\"},\r\n          {value:\"10:00\"},\r\n          {value:\"11:00\"},\r\n          {value:\"12:00\"},\r\n          {value:\"13:00\"},\r\n          {value:\"14:00\"},\r\n          {value:\"15:00\"},\r\n          {value:\"16:00\"},\r\n          {value:\"17:00\"},\r\n        ],\r\n        errorTxt : \"\"\r\n      }\r\n    },\r\n    created() {\r\n      // this.connect()\r\n      // App.vue가 생성되면 소켓 연결을 시도합니다.\r\n    },\r\n    computed: {\r\n      roomInfo() {\r\n        return this.$store.state.alarm.roomInfo;\r\n      },\r\n      //----------------------------------\r\n      // 고장접수 정보\r\n      //----------------------------------\r\n      accptInfo(){\r\n        return this.$store.state.trouble.accptInfo;\r\n      },\r\n      userInfo() {\r\n      // 로그인 사용자 정보\r\n        return this.$store.state.auth.userInfo;\r\n      },\r\n      consultHist(){\r\n        return this.$store.state.consult.consultHist;\r\n      },\r\n      consultTarget() {\r\n      // 로그인 사용자 정보\r\n        return this.$store.state.consult.consultTarget;\r\n      },\r\n      consultStatus(){\r\n        return this.$store.state.consult.consultStatus;\r\n      }\r\n    },\r\n    methods: {\r\n      // 메시지 전송\r\n      sendMessage(item1) {\r\n        this.consultTarget.currConsultId = item1.consult_id;\r\n        // #TODO 이 부분에 유효성 검증 처리가 들어가야 함\r\n        // 서버로 요청하기전에 1차적인 검증 필요 부분\r\n        // #TODO 메시지 공격 부분도 처리 필요할 수도 있음. 디테일 한 부분\r\n        if(this.message.length > 1000){\r\n          alert(\"1000글자 이하로 작성 가능합니다. (\"+ this.message.length +\"/1000)\");\r\n          return\r\n        }\r\n        if (this.message !== '') {\r\n          this.sendConsultTalk()\r\n        }\r\n      },\r\n      sendConsultTalk(){\r\n        console.log(\"보내는 메시지 : \" + this.messageTemplet(\"TX\"));\r\n        //if (this.consultTarget.socketArray[this.consultTarget.currTargetIdx] && this.consultTarget.socketArray[this.consultTarget.currTargetIdx].connected) {\r\n          this.consultTarget.socketArray[0].send(\"/pub/message\", this.messageTemplet(\"TX\"), {});\r\n          this.message = ''\r\n        //}else{\r\n          // #TODO 소캣 정보가 없을시 연결에 대한 오류 처리\r\n        //}\r\n      },\r\n      showImg(value, type){\r\n        console.log(value);\r\n        this.$emit('showImg', value, type);\r\n      },\r\n      // 보내는 메시지 json 공통화\r\n      messageTemplet(msgType){\r\n        // eslint-disable-next-line \r\n        //debugger;\r\n        console.log(msgType);\r\n        const msg = {\r\n          consult_id: this.consultTarget.currConsultId,\r\n          user_key: this.consultTarget.currUserKey,\r\n          sender_type : \"CS\",\r\n          content: this.message,\r\n          content_type : msgType,\r\n          file_name : this.file_name\r\n        };\r\n        return JSON.stringify(msg);\r\n      },\r\n      // #COMMON : 이미지 변환에 대한 공통 함수 처리 필요\r\n      toDataURL(url, callback){\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.onload = function(){\r\n          let reader = new FileReader();\r\n          reader.onloadend = function(){\r\n            // 처리 된 후에 작동하도록 collback 처리. result에서 첫번째 , 까지 제거하는 처리 필요 . 기본 타입은 UI에서 제어\r\n            callback(reader.result);\r\n          }\r\n          reader.readAsDataURL(xhr.response);\r\n        }\r\n        // blob 방식으로 변환 - Base64\r\n        xhr.open('GET', url);\r\n        xhr.responseType = 'blob';\r\n        xhr.send();\r\n      },\r\n      sendImg(imgUrl, imgType, imgType2){\r\n        if(this.consultTarget.cnvrst_sttus != 'A'){\r\n          alert(\"상담이 시작되지 않았음으로 이미지 전송이 불가합니다.\\n상담이 시작된 후 전송해 주세요\")\r\n        }else{\r\n          if(imgType == 'IM-RESEND'){\r\n            this.file_name = imgUrl.substr(5);\r\n            this.message = imgUrl\r\n            this.consultTarget.socketArray[0].send(\"/pub/message\", this.messageTemplet(\"IM\"), {});\r\n            this.file_name = \"\";\r\n            this.message = \"\";\r\n          }else{\r\n            this.file_name = imgUrl + imgType2;\r\n            this.message = '/nas/' + imgUrl + imgType2\r\n            this.consultTarget.socketArray[0].send(\"/pub/message\", this.messageTemplet(\"IM\"), {});\r\n            this.file_name = \"\";\r\n            this.message = \"\";\r\n          }\r\n        }\r\n      },\r\n\r\n      uploadImage(input){\r\n        if(input.files && input.files[0]){\r\n          console.log(\"input\");\r\n          let reader = new FileReader();\r\n          let self = this;\r\n          reader.onload = function(e) {\r\n            self.toDataURL(e.target.result, function(dataUrl) {\r\n              let fileBlock = dataUrl.split(\",\");\r\n              console.log(dataUrl);\r\n              self.file_name = fileBlock[0];\r\n              self.message = fileBlock[1];\r\n              self.consultTarget.socketArray[0].send(\"/pub/message\", self.messageTemplet(\"IM-BASE64\"), {});\r\n              self.file_name = \"\";\r\n              self.message = \"\";\r\n              self.isDragging = false;\r\n            })\r\n          }\r\n          reader.readAsDataURL(input.files[0]);\r\n        }else{\r\n           console.log(\"input?\");\r\n        }\r\n      },\r\n\r\n      dropInputTag(e){\r\n        let file = Array.from(e.dataTransfer.files, v => v)[0]\r\n        this.$refs.image.files = e.dataTransfer.files;\r\n        //this.uploadImage(file);\r\n        console.log(file);\r\n        if(this.consultTarget.cnvrst_sttus != 'A'){\r\n          alert(\"상담이 시작되지 않았음으로 이미지 전송이 불가합니다.\\n상담이 시작된 후 전송해 주세요\")\r\n          this.isDragging = false;\r\n          //#TODO 3MB 스트림방식으로 보냈을떄 증가하는 값 고려 - 소캣, 복호화 관련해서 수호씨한테 질문\r\n        }else if(file.size > 2560224){\r\n          alert(\"3MB 넘는 파일은 전송하실 수 없습니다.\");\r\n          this.isDragging = false;\r\n        }else{\r\n          this.file_name = file.name;\r\n          this.uploadImage(this.$refs.image);\r\n          console.log(file);\r\n          this.isDragging = false;\r\n        }\r\n      },\r\n      dragover(){\r\n        this.isDragging = true;\r\n      },\r\n      dragleave(){\r\n        this.isDragging = false;\r\n      },\r\n      connect() {\r\n        const serverURL = process.env.VUE_APP_API_URL + \"/web-socket\"\r\n        let socket = new SockJS(serverURL);\r\n        this.stompClient = Stomp.over(socket);\r\n        this.consultTarget.consultArray[0].consult_id;\r\n        this.consultTarget.currConsultId = this.consultTarget.consultArray[0].consult_id;\r\n        this.consultTarget.socketArray.unshift(Stomp.over(socket));\r\n        console.log(`소켓 연결을 시도. 서버 주소: ${serverURL}`)\r\n        this.consultTarget.socketArray[0].connect({},\r\n          frame => {\r\n            // 소켓 연결 성공\r\n            this.connected = true;\r\n            console.log('소켓 연결 성공 : ' + frame);\r\n            this.consultTarget.socketArray[0].subscribe(\"/sub/consult/\" + this.consultTarget.consultArray[0].consult_id, res => {\r\n              // 현재 id가 아닐 경우에만 class 추가 = connect는 0고정\r\n              if(document.getElementById('consult_id_0') != null){\r\n                if(0 != this.consultTarget.currTargetIdx){\r\n                  document.getElementById('consult_id_0').classList.add(\"new\");\r\n                }\r\n              }\r\n              console.log('받은 메시지 : ' + res.body);\r\n              // 서버에서 받아온 메시지를 JSON 형식으로 변환해서 화면에 세팅\r\n              // #TODO 메시지 암호화 처리 들어가면 이부분에서 복호화 필요\r\n              let reiveMessge = JSON.parse(res.body);\r\n              console.log(reiveMessge);\r\n              \r\n              // 최초 메시지 수신시(reference) user_Key 세팅 : user_key로 수신, 발신 구분\r\n              if(this.consultTarget.consultArray[0].cnvrst_sttus == 'W'){\r\n                this.consultTarget.consultArray[0].cnvrst_sttus = 'A';\r\n                this.consultTarget.cnvrst_sttus = 'A';\r\n                this.consultTarget.currUserKey = reiveMessge.user_key;\r\n                this.$forceUpdate();\r\n              }\r\n              \r\n              this.consultTarget.reiveMessgeArray[0].push(reiveMessge);\r\n              // 스크롤 갱신 처리 : 처리 지연 개선 필요. DOM 기준으로 변경\r\n              setTimeout(function(){\r\n                let chat_box = document.getElementById(\"chat_box_0\");\r\n                chat_box.scrollTop = chat_box.scrollHeight;\r\n              }, 300)\r\n            });\r\n          },\r\n          error => {\r\n            // 소켓 연결 실패\r\n            console.log('소켓 연결 실패', error);\r\n            this.consultTarget.socketArray[0].connect()\r\n            this.connected = false;\r\n            if(this.reConnectCnt < 5){\r\n              this.reConnectCnt = this.reConnectCnt + 1\r\n              this.connect();\r\n            }else{\r\n              alert(\"재연결 5회 실패 - api 서버 연결 안됨\");\r\n              console.log('소켓 연결 5회 실패', error);\r\n            }\r\n            //this.connect();\r\n          }\r\n        );\r\n      }, \r\n      reConnect(item, idx) {\r\n        const serverURL = process.env.VUE_APP_API_URL + \"/web-socket?idx=\" + idx\r\n        this.user_key = item.user_key;\r\n        this.roomInfo.consult_id = item.consult_id;\r\n        //this.consultStatus = item.cnvrst_sttus;\r\n        //this.accptInfo.userName = item.cust_nm;\r\n        let socket = new SockJS(serverURL);\r\n        this.consultTarget.socketArray.push(Stomp.over(socket));\r\n        //this.stompClient = Stomp.over(socket);\r\n        console.log(`소켓 재연결을 시도. 서버 주소: ${serverURL}`)\r\n        //let chat_box = document.getElementById(\"chat_box\");\r\n        //chat_box.scrollTop = chat_box.scrollHeight;\r\n        \r\n        this.consultTarget.socketArray[idx].connect({},\r\n          frame => {\r\n            // 소켓 연결 성공\r\n            this.connected = true;\r\n            console.log('소켓 재연결 성공 : ' + frame + \"/\" + item.consult_id);\r\n            this.consultTarget.socketArray[idx].subscribe(\"/sub/consult/\" + item.consult_id, res => {\r\n              if(document.getElementById('consult_id_' + item.id) != null){\r\n                if(item.id != this.consultTarget.currTargetIdx){\r\n                  document.getElementById('consult_id_' + item.id).classList.add(\"new\");\r\n                }\r\n              }\r\n              console.log('받은 메시지 :' + res.body);\r\n              \r\n              // 서버에서 받아온 메시지를 JSON 형식으로 변환해서 화면에 세팅\r\n              // #TODO 메시지 암호화 처리 들어가면 이부분에서 복호화 필요\r\n              let reiveMessge = JSON.parse(res.body);\r\n              console.log(reiveMessge);\r\n              /*if(reiveMessge.user_key != '' && this.user_key == ''){\r\n                this.user_key = reiveMessge.user_key;\r\n                this.recvList.push(reiveMessge);\r\n              }else{\r\n                this.recvList.push(reiveMessge);\r\n              }*/\r\n\r\n              // 최초 메시지 수신시(reference) user_Key 세팅 : user_key로 수신, 발신 구분\r\n              if(this.consultTarget.consultArray[idx].cnvrst_sttus == 'W'){\r\n                this.consultTarget.consultArray[idx].cnvrst_sttus = 'A';\r\n                this.consultTarget.cnvrst_sttus = 'A';\r\n                this.consultTarget.currUserKey = reiveMessge.user_key;\r\n                this.$forceUpdate();\r\n              }\r\n              \r\n              this.consultTarget.reiveMessgeArray[idx].push(reiveMessge);\r\n              //this.recvList.push(reiveMessge);\r\n              // 스크롤 갱신 처리 : 처리 지연 개선 필요. DOM 기준으로 변경\r\n              setTimeout(function(){\r\n                let chat_box = document.getElementById(\"chat_box_\" + item.id);\r\n                chat_box.scrollTop = chat_box.scrollHeight;\r\n              }, 300)\r\n            });\r\n          },\r\n          error => {\r\n            // 소켓 연결 실패\r\n            console.log('소켓 연결 실패', error);\r\n            this.consultTarget.socketArray[idx].connect()\r\n            this.connected = false;\r\n            if(this.reConnectCnt < 5){\r\n              this.reConnectCnt = this.reConnectCnt + 1\r\n              this.connect();\r\n            }else{\r\n              alert(\"재연결 5회 실패 - api 서버 연결 안됨\");\r\n              console.log('소켓 연결 5회 실패', error);\r\n            }\r\n            //this.connect();\r\n          }\r\n        );\r\n      },\r\n      showReservation(item){\r\n        this.show_reservation = true;\r\n        this.consultTarget.currConsultId = item.consult_id\r\n        this.consultTarget.currUserKey = item.user_key\r\n      },\r\n      closeReservation(){\r\n        this.errorTxt = \"\";\r\n        this.show_reservation = false;\r\n      },\r\n      setConsultReservation(){\r\n        let reservation_date = document.getElementById(\"reservation_date\").value;\r\n        if(reservation_date == \"\"){\r\n          this.errorTxt = \"예약일을 입력해주세요.\";\r\n          return;\r\n        }\r\n        this.errorTxt = \"\";\r\n        let reservation_time = document.getElementById(\"reservation_time\").value;\r\n        let rsv_time = reservation_date + \" \" + reservation_time;\r\n        if(confirm(rsv_time + \"로 예약 하시겠습니까? 예약시 상담이 종료됩니다.\")){\r\n          let payload = {\r\n            tt_id : this.consultTarget.currTtID, //this.roomInfo.consult_id,\r\n            status : 'reservation',\r\n            rsv_time : reservation_date + \"T\" + reservation_time + \":00\"\r\n          }\r\n          this.$store.dispatch(\"consult/consultReservation\", payload).then(() => {\r\n            // this.$emit('getConsulting');\r\n            let payload = {\r\n              consult_id : this.consultTarget.currConsultId, //this.roomInfo.consult_id,\r\n              status : 'done',\r\n              user_key : this.consultTarget.currUserKey//this.user_key\r\n\r\n            }\r\n            this.$store.dispatch(\"consult/consultStatus\", payload).then(() => {\r\n              this.consultTarget.consultArray = [];\r\n              alert(\"상담이 예약되었습니다.\");\r\n              this.$router.push({path:'/alarm'});\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.errorTxt = \"시스템 에러입니다.\";\r\n          });\r\n        }\r\n      },\r\n\r\n      setConsultStatus(item, type, idx){\r\n        let setStatus = 'pending'\r\n\r\n        if(type == 2){\r\n          setStatus = 'done'\r\n        }else if(item.cnvrst_sttus == 'S'){\r\n          setStatus = 'consulting'\r\n        }\r\n        let payload = {\r\n          consult_id : item.consult_id, //this.roomInfo.consult_id,\r\n          status : setStatus,\r\n          user_key : item.user_key//this.user_key\r\n        }\r\n        this.$store.dispatch(\"consult/consultStatus\", payload).then(() => {\r\n          //this.consultStatus = status;\r\n          //\r\n          // this.consultTarget.currTargetIdx = item.id;\r\n          //\r\n          this.consultTarget.cnvrst_sttus = this.consultStatus.cnvrst_sttus;\r\n          if(this.consultTarget.cnvrst_sttus == 'D'){\r\n            this.consultTarget.consultArray = [];\r\n            // this.$emit('getConsulting');\r\n            alert(\"상담이 완료되었습니다.\");\r\n            this.$router.push({path:'/alarm'});\r\n          }else{\r\n            this.consultTarget.consultArray[idx].cnvrst_sttus = this.consultStatus.cnvrst_sttus;\r\n          }\r\n          \r\n          this.$forceUpdate();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      },\r\n      StringUtil(){\r\n        var obj = StringUtil;\r\n        return obj;        \r\n      }\r\n    },\r\n    mounted(){\r\n      // list는 있으나 선택된 값이 없을 시 0번째 값 선택\r\n      if(this.consultTarget.currTargetIdx == '' && this.consultTarget.consultArray.length != 0){\r\n        this.consultTarget.currTargetIdx = this.consultTarget.consultArray[0].id;\r\n        this.$forceUpdate();\r\n      }\r\n    }\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}