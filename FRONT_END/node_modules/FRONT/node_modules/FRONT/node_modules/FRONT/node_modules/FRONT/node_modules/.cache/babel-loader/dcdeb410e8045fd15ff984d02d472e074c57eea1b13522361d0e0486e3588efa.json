{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"consult\"\n};\nconst _hoisted_2 = {\n  class: \"consult_head\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"dt\", null, \"상담중인 고객 리스트\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"id\", \"onClick\"];\nconst _hoisted_5 = [\"title\"];\nconst _hoisted_6 = {\n  class: \"group\",\n  style: {\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_7 = {\n  class: \"group\"\n};\nconst _hoisted_8 = {\n  class: \"group\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"img_layer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_consult_net_diagram = _resolveComponent(\"consult-net-diagram\");\n  const _component_consult_guidelines = _resolveComponent(\"consult-guidelines\");\n  const _component_consult_chat = _resolveComponent(\"consult-chat\");\n  const _component_consult_accpt_info = _resolveComponent(\"consult-accpt-info\");\n  const _component_consult_cmplt_hist = _resolveComponent(\"consult-cmplt-hist\");\n  const _component_consult_hist = _resolveComponent(\"consult-hist\");\n  const _component_consult_send_img_layer = _resolveComponent(\"consult-send-img-layer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" consult \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" consult_head : 상담중인 고객 리스트 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"dl\", null, [_hoisted_3, _createElementVNode(\"dd\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.consultTarget.consultArray, (item, idx) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: idx,\n      id: 'consult_id_' + item.id,\n      class: _normalizeClass(item.id == $options.consultTarget.currTargetIdx ? 'curr' : ''),\n      onClick: $event => item.id != $options.consultTarget.currTargetIdx ? $options.getConsoltContent(item, idx) : ''\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass('bg_st_' + item.cnvrst_sttus),\n      title: item.consult_id\n    }, _toDisplayString(item.cnvrst_sttus == 'S' ? '상담보류' : item.cnvrst_sttus == 'A' ? '진행중' : '대기중'), 11 /* TEXT, CLASS, PROPS */, _hoisted_5), _createTextVNode(\" \" + _toDisplayString(item.cust_nm != null ? $options.StringUtil().cusNmFormatter(item.cust_nm) : '이름없음'), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createCommentVNode(\"// consult_head \"), _createCommentVNode(\" Left Group \"), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" ConsultNetDiagram : 댁내 망구성도 \"), _createVNode(_component_consult_net_diagram, {\n    ref: \"ConsultNetDigram\"\n  }, null, 512 /* NEED_PATCH */), _createCommentVNode(\"// ConsultNetDiagram \"), _createCommentVNode(\" ConsultGuidelines : AI 가이드라인 \"), _createVNode(_component_consult_guidelines, {\n    onShowImg: $options.showImg,\n    ref: \"ConsultGuidelines\"\n  }, null, 8 /* PROPS */, [\"onShowImg\"]), _createCommentVNode(\"// ConsultGuidelines \")]), _createCommentVNode(\"// Left Group \"), _createCommentVNode(\" Center Group \"), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" ConsultChat : 메인 채팅창 : #TODO : 탭 구성하고 반복문 돌려야 될 듯\"), _createVNode(_component_consult_chat, {\n    ref: \"ConsultChat\",\n    onGetConsulting: $options.getConsulting,\n    onShowImg: $options.showImg\n  }, null, 8 /* PROPS */, [\"onGetConsulting\", \"onShowImg\"]), _createCommentVNode(\"// ConsultChat \")]), _createCommentVNode(\"// Center Group \"), _createCommentVNode(\" Right Group \"), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" ConsultAccptInfo : 고장접수 정보 \"), _createVNode(_component_consult_accpt_info, {\n    ref: \"ConsultAccptInfo\"\n  }, null, 512 /* NEED_PATCH */), _createCommentVNode(\"// ConsultAccptInfo \"), _createCommentVNode(\" ConsultCmpltHist : 고장이력 정보 \"), _createVNode(_component_consult_cmplt_hist, {\n    ref: \"ConsultCmpltHist\"\n  }, null, 512 /* NEED_PATCH */), _createCommentVNode(\"// ConsultCmpltHist \"), _createCommentVNode(\" ConsultHist : 비대면 응대이력 \"), _createVNode(_component_consult_hist, {\n    ref: \"ConsultHist\"\n  }, null, 512 /* NEED_PATCH */), _createCommentVNode(\"// ConsultHist \")]), _createCommentVNode(\"// Right Group \")]), _createCommentVNode(\"// consult \"), _createCommentVNode(\" layer : layer ccomponents 호출 영역 \"), $data.showLayer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_consult_send_img_layer, {\n    onCloseImg: $options.closeImg,\n    onSendImg: $options.sendImg,\n    childValue: $data.sendImgObj\n  }, null, 8 /* PROPS */, [\"onCloseImg\", \"onSendImg\", \"childValue\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"// layer \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAEOA,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAc;gCAErBC,oBAAoB,YAAhB,aAAW;;;;EAoBdD,KAAK,EAAC,OAAO;EAACE,KAA2B,EAA3B;IAAA;EAAA;;;EAWdF,KAAK,EAAC;AAAO;;EAQbA,KAAK,EAAC;AAAO;;;EAefA,KAAK,EAAC;;;;;;;;;;6DA3DXG,gCAAgB,EAChBF,oBAuDM,OAvDNG,UAuDM,GAtDJD,mDAAmC,EACnCF,oBAmBM,OAnBNI,UAmBM,GAlBJJ,oBAiBK,aAhBHK,UAAoB,EACpBL,oBAcK,aAbHA,oBAYK,gCAXHM,oBAUKC,6BAVqBC,sBAAa,CAACC,YAAY,GAAxCC,IAAI,EAAEC,GAAG;yBAArBL,oBAUK;MATFM,GAAG,EAAED,GAAG;MACRE,EAAE,kBAAkBH,IAAI,CAACG,EAAE;MAC3Bd,KAAK,kBAAEW,IAAI,CAACG,EAAE,IAAIL,sBAAa,CAACM,aAAa;MAC7CC,OAAK,YAAEL,IAAI,CAACG,EAAE,IAAIL,sBAAa,CAACM,aAAa,GAAGN,0BAAiB,CAACE,IAAI,EAAEC,GAAG;QAE5EX,oBAEO;MAFAD,KAAK,6BAAaW,IAAI,CAACM,YAAY;MAAGC,KAAK,EAAEP,IAAI,CAACQ;wBACpDR,IAAI,CAACM,YAAY,mBAAoBN,IAAI,CAACM,YAAY,qFACpD,GACP,oBAAEN,IAAI,CAACS,OAAO,WAAWX,mBAAU,GAAGY,cAAc,CAACV,IAAI,CAACS,OAAO;0CAM3EjB,uCAAuB,EACvBA,mCAAmB,EACnBF,oBAOM,OAPNqB,UAOM,GANJnB,oDAAoC,EACpCoB,aAA8CC;IAAzBC,GAAG,EAAC;EAAkB,gCAC3CtB,4CAA4B,EAC5BA,qDAAqC,EACrCoB,aAAiEG;IAA5CC,SAAO,EAAElB,gBAAO;IAAEgB,GAAG,EAAC;0CAC3CtB,4CAA4B,IAE9BA,qCAAqB,EAErBA,qCAAqB,EACrBF,oBAIM,OAJN2B,UAIM,GAHJzB,yEAAyD,EACzDoB,aAAqFM;IAAvEJ,GAAG,EAAC,aAAa;IAAEK,eAAa,EAAErB,sBAAa;IAAGkB,SAAO,EAAElB;6DACzEN,sCAAsB,IAExBA,uCAAuB,EAEvBA,oCAAoB,EACpBF,oBAUM,OAVN8B,UAUM,GATJ5B,mDAAmC,EACnCoB,aAA6CS;IAAzBP,GAAG,EAAC;EAAkB,gCAC1CtB,2CAA2B,EAC3BA,mDAAmC,EACnCoB,aAA6CU;IAAzBR,GAAG,EAAC;EAAkB,gCAC1CtB,2CAA2B,EAC3BA,+CAA+B,EAC/BoB,aAAiCW;IAAnBT,GAAG,EAAC;EAAa,gCAC/BtB,sCAAsB,IAExBA,sCAAsB,IAExBA,kCAAkB,EAClBA,wDAAwC,EACXgC,eAAS,kBAAtC5B,oBAEM,OAFN6B,UAEM,GADJb,aAA0Fc;IAAjEC,UAAQ,EAAE7B,iBAAQ;IAAG8B,SAAO,EAAE9B,gBAAO;IAAG+B,UAAU,EAAEL;6GAE/EhC,gCAAgB","names":["class","_createElementVNode","style","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","$options","consultArray","item","idx","key","id","currTargetIdx","onClick","cnvrst_sttus","title","consult_id","cust_nm","cusNmFormatter","_hoisted_6","_createVNode","_component_consult_net_diagram","ref","_component_consult_guidelines","onShowImg","_hoisted_7","_component_consult_chat","onGetConsulting","_hoisted_8","_component_consult_accpt_info","_component_consult_cmplt_hist","_component_consult_hist","$data","_hoisted_9","_component_consult_send_img_layer","onCloseImg","onSendImg","childValue"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\views\\pages\\consult\\Consult.vue"],"sourcesContent":["<template>\r\n  <!-- consult -->\r\n  <div class=\"consult\">\r\n    <!-- consult_head : 상담중인 고객 리스트 -->\r\n    <div class=\"consult_head\">\r\n      <dl>\r\n        <dt>상담중인 고객 리스트</dt>\r\n        <dd>\r\n          <ul>\r\n            <li v-for=\"(item, idx) in consultTarget.consultArray\" \r\n              :key=\"idx\" \r\n              :id=\"'consult_id_' + item.id\"\r\n              :class=\"item.id == consultTarget.currTargetIdx ? 'curr' : ''\" \r\n              @click=\"item.id != consultTarget.currTargetIdx ? getConsoltContent(item, idx) : ''\" \r\n            >\r\n              <span :class=\"'bg_st_' + item.cnvrst_sttus\" :title=\"item.consult_id\">\r\n                {{ item.cnvrst_sttus == 'S' ? '상담보류' : (item.cnvrst_sttus == 'A' ? '진행중' : '대기중')}}\r\n              </span>\r\n              {{item.cust_nm != null ? StringUtil().cusNmFormatter(item.cust_nm) : '이름없음' }}\r\n            </li>\r\n          </ul>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n    <!--// consult_head -->\r\n    <!-- Left Group -->\r\n    <div class=\"group\" style=\"position: relative;\">\r\n      <!-- ConsultNetDiagram : 댁내 망구성도 -->\r\n      <consult-net-diagram ref=\"ConsultNetDigram\" />\r\n      <!--// ConsultNetDiagram -->\r\n      <!-- ConsultGuidelines : AI 가이드라인 -->\r\n      <consult-guidelines @showImg=\"showImg\" ref=\"ConsultGuidelines\" />\r\n      <!--// ConsultGuidelines -->\r\n    </div>\r\n    <!--// Left Group -->\r\n\r\n    <!-- Center Group -->\r\n    <div class=\"group\">\r\n      <!-- ConsultChat : 메인 채팅창 : #TODO : 탭 구성하고 반복문 돌려야 될 듯-->\r\n      <consult-chat ref=\"ConsultChat\" @getConsulting=\"getConsulting\" @showImg=\"showImg\"  />\r\n      <!--// ConsultChat -->\r\n    </div>\r\n    <!--// Center Group -->\r\n\r\n    <!-- Right Group -->\r\n    <div class=\"group\">\r\n      <!-- ConsultAccptInfo : 고장접수 정보 -->\r\n      <consult-accpt-info ref=\"ConsultAccptInfo\" />\r\n      <!--// ConsultAccptInfo -->\r\n      <!-- ConsultCmpltHist : 고장이력 정보 -->\r\n      <consult-cmplt-hist ref=\"ConsultCmpltHist\" />\r\n      <!--// ConsultCmpltHist -->\r\n      <!-- ConsultHist : 비대면 응대이력 -->\r\n      <consult-hist ref=\"ConsultHist\"/>\r\n      <!--// ConsultHist -->\r\n    </div>\r\n    <!--// Right Group -->\r\n  </div>\r\n  <!--// consult -->\r\n  <!-- layer : layer ccomponents 호출 영역 -->\r\n  <div class=\"img_layer\" v-if=\"showLayer\">\r\n    <consult-send-img-layer @closeImg=\"closeImg\" @sendImg=\"sendImg\" :childValue=\"sendImgObj\"/>\r\n  </div>\r\n  <!--// layer -->\r\n  \r\n  \r\n</template>\r\n\r\n<script>\r\n  import ConsultNetDiagram from './ConsultNetDiagram'; // 댁내 망구성도\r\n  import ConsultGuidelines from './ConsultGuidelines'; // AI 가이드라인\r\n  import ConsultChat from './ConsultChat'; // 메인 채팅창\r\n  import ConsultAccptInfo from './ConsultAccptInfo'; // 고장접수 정보\r\n  import ConsultCmpltHist from './ConsultCmpltHist'; // 고장이력 정보\r\n  import ConsultHist from './ConsultHist'; // 비대면 응대이력\r\n  // ** Layer ** //\r\n  import ConsultSendImgLayer from './layer/ConsultSendImgLayer'; // AI 가이드라인 이미지 Layer\r\n  import StringUtil from '../../../utils/StringUtil';\r\n  //import ConsultGuideTextPopup from './popup/ConsultGuideTextPopup' ; //상세가이드 팝업\r\n\r\n  export default {\r\n    name: 'App',\r\n    components: {\r\n      ConsultNetDiagram, // 댁내 망구성도\r\n      ConsultGuidelines, // AI 가이드라인\r\n      ConsultChat, // 메인 채팅창\r\n      ConsultAccptInfo, // 고장접수 정보\r\n      ConsultCmpltHist, // 고장이력 정보\r\n      ConsultHist, // 비대면 응대이력\r\n      ConsultSendImgLayer, \r\n      // AI 가이드라인 이미지 호출\r\n     // ConsultGuideTextPopup //상세 가이드 팝업\r\n    },\r\n    data() {\r\n      return {\r\n        showLayer : false,\r\n        sendImgObj : {\r\n          imgUrl : \"\",\r\n          imgType : \"\"\r\n        },\r\n        consultingList : [],\r\n        checkItemId : \"\"\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    computed: {\r\n      roomInfo() {\r\n        return this.$store.state.alarm.roomInfo;\r\n      },\r\n      userInfo() {\r\n      // 로그인 사용자 정보\r\n        return this.$store.state.auth.userInfo;\r\n      },\r\n      consulting() {\r\n        return this.$store.state.consult.consulting\r\n      },\r\n      consultTarget() {\r\n      // 로그인 사용자 정보\r\n        return this.$store.state.consult.consultTarget;\r\n      },\r\n      consultHist(){\r\n        return this.$store.state.consult.consultHist;\r\n      },\r\n      renewalToken(){\r\n        return this.$store.state.auth.renewalToken;\r\n      }\r\n    },\r\n    methods: {\r\n      showImg(imgUrl, imgType){\r\n        this.sendImgObj.imgUrl = imgUrl;\r\n        this.sendImgObj.imgType = imgType;\r\n        this.showLayer = true;\r\n      },\r\n      closeImg(){\r\n        this.showLayer = false; \r\n      },\r\n      sendImg(imgType2){\r\n        console.log(this.sendImgObj.imgUrl);\r\n        this.$refs.ConsultChat.sendImg(this.sendImgObj.imgUrl, this.sendImgObj.imgType, imgType2);\r\n        this.closeImg();\r\n      },\r\n      getConsulting() {\r\n        // 토큰 갱신 확인 후 로직 진행\r\n        this.$store.dispatch(\"auth/renewalToken\").then(() => {     \r\n          if(this.renewalToken.data){\r\n            // this.consulting init\r\n            this.consulting = []\r\n            // TTID 조회\r\n            let item = this.userInfo.loginId;\r\n            this.$store.dispatch(\"consult/consulting\", item).then(() => {\r\n              // 초기화\r\n              // 알림톡 전송 (로직 선 처리)\r\n              let targetName = this.consultTarget.targetName;\r\n              if(targetName != null && targetName != ''){\r\n                this.sendAlarmTalk();\r\n              }else{\r\n                this.setgetConsultingList('setting');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n          }else{\r\n            alert(\"로그인이 만료되었습니다. 다시 로그인해주세요.\");\r\n            // localStorage 초기화\r\n            localStorage.clear();\r\n            // logout 호출\r\n            this.$store.dispatch(\"auth/signout\").then(() => {            \r\n              // 로그아웃 성공\r\n              this.$router.push({path:'/login'});\r\n            })\r\n            .catch(error => {\r\n              // 로그아웃 호출 실패. 로그인 페이지로 이동\r\n              console.log(error);\r\n              this.$router.push({path:'/login'});\r\n            });\r\n          }\r\n        })\r\n    \r\n      },\r\n      setgetConsultingList(type){\r\n        if(this.consulting.length == 0){\r\n          alert(\"진행중인 상담이 없습니다.\");\r\n        }\r\n        // 기준값\r\n        let showDataListNum = 5;\r\n        // 기준값 리스트값 비교 후 신규 배열 생성\r\n        let currConsultCnt = (showDataListNum < this.consulting.length ? showDataListNum : this.consulting.length);\r\n        for(let i = 0; i < currConsultCnt; i++){\r\n          this.consultTarget.consultArray.push(this.consulting[i]);\r\n          //this.consultTarget.socketArray[i] = [];\r\n          this.consultTarget.reiveMessgeArray[i] = [];\r\n          this.consultTarget.consultArray[i].histArray = [];\r\n          if(type == 'alarm' && i == 0){\r\n            this.consultTarget.currTargetIdx = 0;\r\n            this.$refs.ConsultChat.connect(this.consulting[i], i);\r\n          }else{\r\n            this.$refs.ConsultChat.reConnect(this.consulting[i], i);\r\n          }\r\n        }\r\n\r\n        \r\n        if(this.consultTarget.currTargetIdx == \"\"){\r\n          this.consultTarget.currTargetIdx = this.consultTarget.consultArray[0].id;\r\n          this.getConsoltContent(this.consultTarget.consultArray[0], 0);\r\n          this.$refs.ConsultGuidelines.openConsultGuideTextPopup();\r\n        }\r\n        this.$forceUpdate();\r\n        console.log(this.consultTarget);\r\n        // this.$refs.ConsultChat.reConnect(item);\r\n        // 신규 배열 생성되면 생성된 수 만큼 소캣 연결\r\n      },\r\n      getConsoltContent(item, idx){\r\n        // 현재 상담 세팅\r\n        this.consultTarget.currTargetIdx = item.id;\r\n        this.consultTarget.currConsultId = item.consult_id;\r\n        this.consultTarget.currUserKey = item.user_key;\r\n        this.consultTarget.currTtID = item.tt_id;\r\n        this.consultTarget.targetNum = item.tel_num;\r\n        this.consultTarget.cnvrst_sttus = item.cnvrst_sttus;\r\n\r\n        // histArray가 없을 경우 histArray 세팅\r\n        if(this.consultTarget.consultArray[idx].histArray == undefined){\r\n          this.consultTarget.consultArray[idx].histArray = [];\r\n        }\r\n        // histArray에 내용이 없고 대기중이 아닐시 consultHist 조회\r\n        if(this.consultTarget.consultArray[idx].histArray.length == 0 && item.cnvrst_sttus != \"W\"){\r\n          let payload = {\r\n            id : item.id,\r\n            consult_id : item.consult_id,\r\n          }\r\n          this.$store.dispatch(\"consult/consultHist\", payload).then(() => {\r\n            // console.log(this.consultHist);\r\n            this.consultTarget.consultArray[idx].histArray = this.consultHist;\r\n            this.$forceUpdate();\r\n            //this.$refs.ConsultChat.reConnect(item);\r\n            //d84e77c4ee0a4e779e4055dcc959d579\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n\r\n        this.$refs.ConsultNetDigram.getHdmsDgrmList();\r\n        this.$refs.ConsultGuidelines.getEgl();\r\n        this.$refs.ConsultAccptInfo.getAccptInfo();\r\n        this.$refs.ConsultCmpltHist.getHistList();\r\n        this.$refs.ConsultHist.getConsultHistList();\r\n\r\n      },\r\n\r\n      sendAlarmTalk(){\r\n        // 알림톡 전달\r\n        if(this.consultTarget.alarmSendCheck == 0){\r\n          this.setgetConsultingList('setting');\r\n          return;\r\n        }\r\n        // 스토리지 저장 방식 다 바꿔야함\r\n        let ttId = this.consultTarget.currTtID; // localStorage.getItem('ttId');\r\n        let svcMainClsCode = this.consultTarget.svcMainClsCode; // localStorage.getItem('svcMainClsCode'); \r\n        let sndNm = this.consultTarget.sndNm; // localStorage.getItem('sndNm'); \r\n        let sndTeam = this.consultTarget.sndTeam; // localStorage.getItem('sndTeam');\r\n        let targetNum = this.consultTarget.targetNum;\r\n        let targetName = this.consultTarget.targetName;\r\n\r\n        if(this.consulting.length >= 5){\r\n          alert(\"최대 5명까지 상담 진행이 가능합니다.\");\r\n          this.consultTarget.alarmSendCheck = 0;\r\n          this.setgetConsultingList('setting');\r\n          return;\r\n        }\r\n\r\n        if(targetNum != \"\" && targetNum != null){\r\n          if(confirm( targetNum + \"로 알림톡을 발송합니다.\")){\r\n            let custNum = targetNum;\r\n            if(targetNum.startsWith(\"0\")) {\r\n                targetNum = \"82\" + targetNum.substring(1);\r\n            }\r\n            // - 제거\r\n            targetNum = targetNum.replace(/-/g, '');\r\n\r\n            for(let i in this.consulting){\r\n              if(this.consulting[i].tel_num == targetNum){\r\n                this.consultTarget.alarmSendCheck = 0;\r\n                alert(custNum + \"으로 이미 상담이 진행중입니다.\");\r\n                this.setgetConsultingList('setting');\r\n                return;\r\n              }\r\n            }\r\n            // let payload = {\r\n            //   \"to\": num\r\n            // };\r\n            //20230309 정민규 수정                 \r\n            let payload = {\r\n              \"trouble\": {\r\n                \"tt_id\": ttId,\r\n                \"svc_main_cls_code\" : svcMainClsCode\r\n              },\r\n              \"sender\" : {\r\n                \"snd_nm\" : sndNm,\r\n                \"snd_team\" : sndTeam,\r\n                \"snd_cmp_no\" : this.userInfo.loginId\r\n              },\r\n              \"customer\" : {\r\n                \"cust_nm\" : targetName,\r\n                \"cust_tel_no\" : targetNum\r\n              }\r\n            } \r\n            console.log(\"알림톡 발송 파람::\",payload);\r\n            this.$store.dispatch(\"alarm/sendAlarmTalk\", payload).then(() => {            \r\n              // 알림톡 -> 전환 관련 처리\r\n              this.consultTarget.alarmSendCheck = 0;\r\n              console.log(this.roomInfo);\r\n              let timeElapsed = Date.now();\r\n              let today = new Date(timeElapsed);\r\n              // 상담중인 고객 리스트 추가\r\n              let newConsult = {\r\n                cnvrst_sttus : 'W',\r\n                consult_datetime : today.toUTCString(),\r\n                consult_id : this.roomInfo.consult_id,\r\n                cust_nm : targetName,\r\n                tel_num : targetNum,\r\n                tt_id : ttId,\r\n                id : 0\r\n              }\r\n              this.consulting.unshift(newConsult);\r\n              this.setgetConsultingList('alarm');\r\n              \r\n            })\r\n            .catch(error => {\r\n              alert(\"알림톡이 발송실패. - 서버 응답 없음\");\r\n              console.log(error);\r\n            });\r\n          }else{\r\n            this.consultTarget.alarmSendCheck = 0;\r\n            this.setgetConsultingList('setting');\r\n          }\r\n        }\r\n      },\r\n      StringUtil(){\r\n        var obj = StringUtil;\r\n        return obj;        \r\n      }\r\n    },\r\n    mounted(){ \r\n      this.getConsulting();\r\n    }\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}