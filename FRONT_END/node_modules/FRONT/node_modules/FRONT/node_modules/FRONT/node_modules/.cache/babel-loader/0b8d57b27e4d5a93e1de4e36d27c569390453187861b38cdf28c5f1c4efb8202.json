{"ast":null,"code":"import axios from 'axios';\nimport router from '../../../router';\nlet axiosInstance = axios.create({\n  baseURL: process.env.VUE_APP_API_URL,\n  timeout: 120000\n});\naxiosInstance.interceptors.request.use(function (config) {\n  //axios.defaults.withCredentials = true; \n  config.withCredentials = true;\n  // API 별 토큰 설정 필요 : localStorage 세팅은 임시로만.....\n  //let token = localStorage.getItem('user-token')\n  //if (token) config.headers['x-access-token'] = token\n  //let accessToken = localStorage.getItem('accessToken')\n  //if (accessToken) config.headers['Authorization'] = 'Bearer ' + accessToken\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  /* eslint-disable */\n  //debugger;\n  // 응답 헤더에 설정 필요한 값(api에서 작업 필요)\n  // Access-Control-Allow-Credentials : true\n  // Access-Control-Allow-Origin : 반드시 설정되어있어야 함, 단 와일드 카드는 불가\n  // Access-Control-Allow-Methods, Headers : 와일드 카드 불가\n  return response;\n}, function (error) {\n  console.log(error);\n  if (error.response.status === 403 || error.response.status === 401) {\n    console.log('unauthorized, logging out ...');\n    //auth.logout()\n    router.replace('/login');\n  }\n  return Promise.reject(error);\n});\nclass HttpRequest {\n  constructor() {\n    this.axios = axios;\n  }\n  setHeader(header) {\n    axiosInstance.defaults.headers.common[header.key] = header.value;\n    axiosInstance.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8';\n  }\n  setAuthorizationHeader(accessToken) {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n  }\n  get(methodName, data) {\n    return axiosInstance.get(methodName, {\n      params: data\n    });\n  }\n  post(methodName, data) {\n    return axiosInstance.post(methodName, data);\n  }\n  put(methodName, data) {\n    return axiosInstance.put(methodName, data);\n  }\n  delete(methodName, id) {\n    return axiosInstance.delete(methodName, {\n      params: {\n        id: id\n      }\n    });\n  }\n  request(type, url, data) {\n    let promise = null;\n    switch (type) {\n      case 'GET':\n        promise = axios.get(url, {\n          params: data\n        });\n        break;\n      case 'POST':\n        promise = axios.post(url, data);\n        break;\n      case 'PUT':\n        promise = axios.put(url, data);\n        break;\n      case 'DELETE':\n        promise = axios.delete(url, data);\n        break;\n      default:\n        promise = axios.get(url, {\n          params: data\n        });\n        break;\n    }\n    return promise;\n  }\n}\nexport default HttpRequest;","map":{"version":3,"names":["axios","router","axiosInstance","create","baseURL","process","env","VUE_APP_API_URL","timeout","interceptors","request","use","config","withCredentials","error","Promise","reject","response","console","log","status","replace","HttpRequest","constructor","setHeader","header","defaults","headers","common","key","value","post","setAuthorizationHeader","accessToken","get","methodName","data","params","put","delete","id","type","url","promise"],"sources":["C:/CSAI_Front/src/store/api/base/http_request.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from '../../../router'\r\n\r\nlet axiosInstance = axios.create({\r\n    baseURL: process.env.VUE_APP_API_URL,\r\n    timeout: 120000\r\n})\r\n\r\n\r\naxiosInstance.interceptors.request.use(function (config) {\r\n    //axios.defaults.withCredentials = true; \r\n    config.withCredentials = true; \r\n    // API 별 토큰 설정 필요 : localStorage 세팅은 임시로만.....\r\n    //let token = localStorage.getItem('user-token')\r\n    //if (token) config.headers['x-access-token'] = token\r\n    //let accessToken = localStorage.getItem('accessToken')\r\n    //if (accessToken) config.headers['Authorization'] = 'Bearer ' + accessToken\r\n    return config\r\n}, function (error) {\r\n    return Promise.reject(error)\r\n})\r\n\r\naxiosInstance.interceptors.response.use(function (response) {\r\n    /* eslint-disable */\r\n    //debugger;\r\n    // 응답 헤더에 설정 필요한 값(api에서 작업 필요)\r\n    // Access-Control-Allow-Credentials : true\r\n    // Access-Control-Allow-Origin : 반드시 설정되어있어야 함, 단 와일드 카드는 불가\r\n    // Access-Control-Allow-Methods, Headers : 와일드 카드 불가\r\n    return response\r\n}, function (error) {\r\n\r\n    console.log(error)\r\n    if (error.response.status === 403 || error.response.status === 401) {\r\n        console.log('unauthorized, logging out ...')\r\n        //auth.logout()\r\n        router.replace('/login')\r\n    }\r\n\r\n    return Promise.reject(error)\r\n})\r\n\r\nclass HttpRequest {\r\n    constructor() {\r\n        this.axios = axios\r\n    }\r\n\r\n    setHeader(header) {\r\n        axiosInstance.defaults.headers.common[header.key] = header.value\r\n        axiosInstance.defaults.headers.post['Content-Type'] = 'application/json;charset=UTF-8'\r\n    }\r\n\r\n    setAuthorizationHeader(accessToken) {\r\n        axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`\r\n    }\r\n\r\n    get(methodName, data) {\r\n        return axiosInstance.get(methodName, {\r\n            params: data\r\n        })\r\n    }\r\n\r\n    post(methodName, data) {\r\n        return axiosInstance.post(methodName, data)\r\n    }\r\n\r\n    put(methodName, data) {\r\n        return axiosInstance.put(methodName, data)\r\n    }\r\n\r\n    delete(methodName, id) {\r\n        return axiosInstance.delete(methodName, { params: { id: id } })\r\n    }\r\n\r\n    request(type, url, data) {\r\n        let promise = null\r\n        switch (type) {\r\n            case 'GET':\r\n                promise = axios.get(url, { params: data }) \r\n                break\r\n            case 'POST': \r\n                promise = axios.post(url, data) \r\n                break\r\n            case 'PUT': \r\n                promise = axios.put(url, data) \r\n                break\r\n            case 'DELETE': \r\n                promise = axios.delete(url, data) \r\n                break\r\n            default: \r\n                promise = axios.get(url, { params: data }) \r\n                break\r\n        }\r\n        return promise\r\n    }\r\n}\r\n\r\nexport default HttpRequest"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}