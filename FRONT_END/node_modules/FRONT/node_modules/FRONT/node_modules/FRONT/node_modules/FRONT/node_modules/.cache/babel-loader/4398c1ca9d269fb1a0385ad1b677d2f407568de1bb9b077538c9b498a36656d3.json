{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport ConsultNetDiagram from './ConsultNetDiagram'; // 댁내 망구성도\nimport ConsultGuidelines from './ConsultGuidelines'; // AI 가이드라인\nimport ConsultChat from './ConsultChat'; // 메인 채팅창\nimport ConsultAccptInfo from './ConsultAccptInfo'; // 고장접수 정보\nimport ConsultCmpltHist from './ConsultCmpltHist'; // 고장이력 정보\nimport ConsultHist from './ConsultHist'; // 비대면 응대이력\n// ** Layer ** //\nimport ConsultSendImgLayer from './layer/ConsultSendImgLayer'; // AI 가이드라인 이미지 Layer\nimport StringUtil from '../../../utils/StringUtil';\n//import ConsultGuideTextPopup from './popup/ConsultGuideTextPopup' ; //상세가이드 팝업\n\nexport default {\n  name: 'App',\n  components: {\n    ConsultNetDiagram,\n    // 댁내 망구성도\n    ConsultGuidelines,\n    // AI 가이드라인\n    ConsultChat,\n    // 메인 채팅창\n    ConsultAccptInfo,\n    // 고장접수 정보\n    ConsultCmpltHist,\n    // 고장이력 정보\n    ConsultHist,\n    // 비대면 응대이력\n    ConsultSendImgLayer\n    // AI 가이드라인 이미지 호출\n    // ConsultGuideTextPopup //상세 가이드 팝업\n  },\n\n  data() {\n    return {\n      showLayer: false,\n      sendImgObj: {\n        imgUrl: \"\",\n        imgType: \"\"\n      },\n      consultingList: [],\n      checkItemId: \"\"\n    };\n  },\n  created() {},\n  computed: {\n    roomInfo() {\n      return this.$store.state.alarm.roomInfo;\n    },\n    userInfo() {\n      // 로그인 사용자 정보\n      return this.$store.state.auth.userInfo;\n    },\n    consulting() {\n      return this.$store.state.consult.consulting;\n    },\n    consultTarget() {\n      // 로그인 사용자 정보\n      return this.$store.state.consult.consultTarget;\n    },\n    consultHist() {\n      return this.$store.state.consult.consultHist;\n    },\n    renewalToken() {\n      return this.$store.state.auth.renewalToken;\n    }\n  },\n  methods: {\n    showImg(imgUrl, imgType) {\n      this.sendImgObj.imgUrl = imgUrl;\n      this.sendImgObj.imgType = imgType;\n      this.showLayer = true;\n    },\n    closeImg() {\n      this.showLayer = false;\n    },\n    sendImg(imgType2) {\n      console.log(this.sendImgObj.imgUrl);\n      this.$refs.ConsultChat.sendImg(this.sendImgObj.imgUrl, this.sendImgObj.imgType, imgType2);\n      this.closeImg();\n    },\n    getConsulting() {\n      // 토큰 갱신 확인 후 로직 진행\n      this.$store.dispatch(\"auth/renewalToken\").then(() => {\n        if (this.renewalToken.data) {\n          // this.consulting init\n          this.consulting = [];\n          // TTID 조회\n          let item = this.userInfo.loginId;\n          this.$store.dispatch(\"consult/consulting\", item).then(() => {\n            // 초기화\n            // 알림톡 전송 (로직 선 처리)\n            let targetName = this.consultTarget.targetName;\n            if (targetName != null && targetName != '') {\n              this.sendAlarmTalk();\n            } else {\n              this.setgetConsultingList('setting');\n            }\n          }).catch(error => {\n            console.log(error);\n          });\n        } else {\n          alert(\"로그인이 만료되었습니다. 다시 로그인해주세요.\");\n          // localStorage 초기화\n          localStorage.clear();\n          // logout 호출\n          this.$store.dispatch(\"auth/signout\").then(() => {\n            // 로그아웃 성공\n            this.$router.push({\n              path: '/login'\n            });\n          }).catch(error => {\n            // 로그아웃 호출 실패. 로그인 페이지로 이동\n            console.log(error);\n            this.$router.push({\n              path: '/login'\n            });\n          });\n        }\n      });\n    },\n    setgetConsultingList(type) {\n      if (this.consulting.length == 0) {\n        alert(\"진행중인 상담이 없습니다.\");\n      }\n      // 기준값\n      let showDataListNum = 5;\n      // 기준값 리스트값 비교 후 신규 배열 생성\n      let currConsultCnt = showDataListNum < this.consulting.length ? showDataListNum : this.consulting.length;\n      for (let i = 0; i < currConsultCnt; i++) {\n        this.consultTarget.consultArray.push(this.consulting[i]);\n        //this.consultTarget.socketArray[i] = [];\n        this.consultTarget.reiveMessgeArray[i] = [];\n        this.consultTarget.consultArray[i].histArray = [];\n        if (type == 'alarm' && i == 0) {\n          this.consultTarget.currTargetIdx = 0;\n          this.$refs.ConsultChat.connect(this.consulting[i], i);\n        } else {\n          this.$refs.ConsultChat.reConnect(this.consulting[i], i);\n        }\n      }\n      if (this.consultTarget.currTargetIdx == \"\") {\n        this.consultTarget.currTargetIdx = this.consultTarget.consultArray[0].id;\n        this.getConsoltContent(this.consultTarget.consultArray[0], 0);\n        this.$refs.ConsultGuidelines.openConsultGuideTextPopup();\n      }\n      this.$forceUpdate();\n      console.log(this.consultTarget);\n      // this.$refs.ConsultChat.reConnect(item);\n      // 신규 배열 생성되면 생성된 수 만큼 소캣 연결\n    },\n\n    getConsoltContent(item, idx) {\n      // 현재 상담 세팅\n      this.consultTarget.currTargetIdx = item.id;\n      this.consultTarget.currConsultId = item.consult_id;\n      this.consultTarget.currUserKey = item.user_key;\n      this.consultTarget.currTtID = item.tt_id;\n      this.consultTarget.targetNum = item.tel_num;\n      this.consultTarget.cnvrst_sttus = item.cnvrst_sttus;\n\n      // histArray가 없을 경우 histArray 세팅\n      if (this.consultTarget.consultArray[idx].histArray == undefined) {\n        this.consultTarget.consultArray[idx].histArray = [];\n      }\n      // histArray에 내용이 없고 대기중이 아닐시 consultHist 조회\n      if (this.consultTarget.consultArray[idx].histArray.length == 0 && item.cnvrst_sttus != \"W\") {\n        let payload = {\n          id: item.id,\n          consult_id: item.consult_id\n        };\n        this.$store.dispatch(\"consult/consultHist\", payload).then(() => {\n          // console.log(this.consultHist);\n          this.consultTarget.consultArray[idx].histArray = this.consultHist;\n          this.$forceUpdate();\n          //this.$refs.ConsultChat.reConnect(item);\n          //d84e77c4ee0a4e779e4055dcc959d579\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n      this.$refs.ConsultNetDigram.getHdmsDgrmList();\n      this.$refs.ConsultGuidelines.getEgl();\n      this.$refs.ConsultAccptInfo.getAccptInfo();\n      this.$refs.ConsultCmpltHist.getHistList();\n      this.$refs.ConsultHist.getConsultHistList();\n    },\n    sendAlarmTalk() {\n      // 알림톡 전달\n      if (this.consultTarget.alarmSendCheck == 0) {\n        this.setgetConsultingList('setting');\n        return;\n      }\n      // 스토리지 저장 방식 다 바꿔야함\n      let ttId = this.consultTarget.currTtID; // localStorage.getItem('ttId');\n      let svcMainClsCode = this.consultTarget.svcMainClsCode; // localStorage.getItem('svcMainClsCode'); \n      let sndNm = this.consultTarget.sndNm; // localStorage.getItem('sndNm'); \n      let sndTeam = this.consultTarget.sndTeam; // localStorage.getItem('sndTeam');\n      let targetNum = this.consultTarget.targetNum;\n      let targetName = this.consultTarget.targetName;\n      if (this.consulting.length >= 5) {\n        alert(\"최대 5명까지 상담 진행이 가능합니다.\");\n        this.consultTarget.alarmSendCheck = 0;\n        this.setgetConsultingList('setting');\n        return;\n      }\n      if (targetNum != \"\" && targetNum != null) {\n        if (confirm(targetNum + \"로 알림톡을 발송합니다.\")) {\n          let custNum = targetNum;\n          if (targetNum.startsWith(\"0\")) {\n            targetNum = \"82\" + targetNum.substring(1);\n          }\n          // - 제거\n          targetNum = targetNum.replace(/-/g, '');\n          for (let i in this.consulting) {\n            if (this.consulting[i].tel_num == targetNum) {\n              this.consultTarget.alarmSendCheck = 0;\n              alert(custNum + \"으로 이미 상담이 진행중입니다.\");\n              this.setgetConsultingList('setting');\n              return;\n            }\n          }\n          // let payload = {\n          //   \"to\": num\n          // };\n          //20230309 정민규 수정                 \n          let payload = {\n            \"trouble\": {\n              \"tt_id\": ttId,\n              \"svc_main_cls_code\": svcMainClsCode\n            },\n            \"sender\": {\n              \"snd_nm\": sndNm,\n              \"snd_team\": sndTeam,\n              \"snd_cmp_no\": this.userInfo.loginId\n            },\n            \"customer\": {\n              \"cust_nm\": targetName,\n              \"cust_tel_no\": targetNum\n            }\n          };\n          console.log(\"알림톡 발송 파람::\", payload);\n          this.$store.dispatch(\"alarm/sendAlarmTalk\", payload).then(() => {\n            // 알림톡 -> 전환 관련 처리\n            this.consultTarget.alarmSendCheck = 0;\n            console.log(this.roomInfo);\n            let timeElapsed = Date.now();\n            let today = new Date(timeElapsed);\n            // 상담중인 고객 리스트 추가\n            let newConsult = {\n              cnvrst_sttus: 'W',\n              consult_datetime: today.toUTCString(),\n              consult_id: this.roomInfo.consult_id,\n              cust_nm: targetName,\n              tel_num: targetNum,\n              tt_id: ttId,\n              id: 0\n            };\n            this.consulting.unshift(newConsult);\n            this.setgetConsultingList('alarm');\n          }).catch(error => {\n            alert(\"알림톡이 발송실패. - 서버 응답 없음\");\n            console.log(error);\n          });\n        } else {\n          this.consultTarget.alarmSendCheck = 0;\n          this.setgetConsultingList('setting');\n        }\n      }\n    },\n    StringUtil() {\n      var obj = StringUtil;\n      return obj;\n    }\n  },\n  mounted() {\n    this.getConsulting();\n  }\n};","map":{"version":3,"mappings":";;AAqEE,OAAOA,iBAAgB,MAAO,qBAAqB,EAAE;AACrD,OAAOC,iBAAgB,MAAO,qBAAqB,EAAE;AACrD,OAAOC,WAAU,MAAO,eAAe,EAAE;AACzC,OAAOC,gBAAe,MAAO,oBAAoB,EAAE;AACnD,OAAOC,gBAAe,MAAO,oBAAoB,EAAE;AACnD,OAAOC,WAAU,MAAO,eAAe,EAAE;AACzC;AACA,OAAOC,mBAAkB,MAAO,6BAA6B,EAAE;AAC/D,OAAOC,UAAS,MAAO,2BAA2B;AAClD;;AAEA,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVT,iBAAiB;IAAE;IACnBC,iBAAiB;IAAE;IACnBC,WAAW;IAAE;IACbC,gBAAgB;IAAE;IAClBC,gBAAgB;IAAE;IAClBC,WAAW;IAAE;IACbC;IACA;IACD;EACD,CAAC;;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAQ,EAAI,KAAK;MACjBC,UAAS,EAAI;QACXC,MAAK,EAAI,EAAE;QACXC,OAAM,EAAI;MACZ,CAAC;MACDC,cAAa,EAAI,EAAE;MACnBC,WAAU,EAAI;IAChB;EACF,CAAC;EACDC,OAAO,GAAG,CACV,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,GAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACH,QAAQ;IACzC,CAAC;IACDI,QAAQ,GAAG;MACX;MACE,OAAO,IAAI,CAACH,MAAM,CAACC,KAAK,CAACG,IAAI,CAACD,QAAQ;IACxC,CAAC;IACDE,UAAU,GAAG;MACX,OAAO,IAAI,CAACL,MAAM,CAACC,KAAK,CAACK,OAAO,CAACD,UAAS;IAC5C,CAAC;IACDE,aAAa,GAAG;MAChB;MACE,OAAO,IAAI,CAACP,MAAM,CAACC,KAAK,CAACK,OAAO,CAACC,aAAa;IAChD,CAAC;IACDC,WAAW,GAAE;MACX,OAAO,IAAI,CAACR,MAAM,CAACC,KAAK,CAACK,OAAO,CAACE,WAAW;IAC9C,CAAC;IACDC,YAAY,GAAE;MACZ,OAAO,IAAI,CAACT,MAAM,CAACC,KAAK,CAACG,IAAI,CAACK,YAAY;IAC5C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,CAAClB,MAAM,EAAEC,OAAO,EAAC;MACtB,IAAI,CAACF,UAAU,CAACC,MAAK,GAAIA,MAAM;MAC/B,IAAI,CAACD,UAAU,CAACE,OAAM,GAAIA,OAAO;MACjC,IAAI,CAACH,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDqB,QAAQ,GAAE;MACR,IAAI,CAACrB,SAAQ,GAAI,KAAK;IACxB,CAAC;IACDsB,OAAO,CAACC,QAAQ,EAAC;MACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,UAAU,CAACC,MAAM,CAAC;MACnC,IAAI,CAACwB,KAAK,CAACnC,WAAW,CAAC+B,OAAO,CAAC,IAAI,CAACrB,UAAU,CAACC,MAAM,EAAE,IAAI,CAACD,UAAU,CAACE,OAAO,EAAEoB,QAAQ,CAAC;MACzF,IAAI,CAACF,QAAQ,EAAE;IACjB,CAAC;IACDM,aAAa,GAAG;MACd;MACA,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,mBAAmB,CAAC,CAACC,IAAI,CAAC,MAAM;QACnD,IAAG,IAAI,CAACX,YAAY,CAACnB,IAAI,EAAC;UACxB;UACA,IAAI,CAACe,UAAS,GAAI,EAAC;UACnB;UACA,IAAIgB,IAAG,GAAI,IAAI,CAAClB,QAAQ,CAACmB,OAAO;UAChC,IAAI,CAACtB,MAAM,CAACmB,QAAQ,CAAC,oBAAoB,EAAEE,IAAI,CAAC,CAACD,IAAI,CAAC,MAAM;YAC1D;YACA;YACA,IAAIG,UAAS,GAAI,IAAI,CAAChB,aAAa,CAACgB,UAAU;YAC9C,IAAGA,UAAS,IAAK,IAAG,IAAKA,UAAS,IAAK,EAAE,EAAC;cACxC,IAAI,CAACC,aAAa,EAAE;YACtB,CAAC,MAAI;cACH,IAAI,CAACC,oBAAoB,CAAC,SAAS,CAAC;YACtC;UACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;YACdZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;UACpB,CAAC,CAAC;QACJ,CAAC,MAAI;UACHC,KAAK,CAAC,2BAA2B,CAAC;UAClC;UACAC,YAAY,CAACC,KAAK,EAAE;UACpB;UACA,IAAI,CAAC9B,MAAM,CAACmB,QAAQ,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC,MAAM;YAC9C;YACA,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC;cAACC,IAAI,EAAC;YAAQ,CAAC,CAAC;UACpC,CAAC,EACAP,KAAK,CAACC,KAAI,IAAK;YACd;YACAZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;YAClB,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;cAACC,IAAI,EAAC;YAAQ,CAAC,CAAC;UACpC,CAAC,CAAC;QACJ;MACF,CAAC;IAEH,CAAC;IACDR,oBAAoB,CAACS,IAAI,EAAC;MACxB,IAAG,IAAI,CAAC7B,UAAU,CAAC8B,MAAK,IAAK,CAAC,EAAC;QAC7BP,KAAK,CAAC,gBAAgB,CAAC;MACzB;MACA;MACA,IAAIQ,eAAc,GAAI,CAAC;MACvB;MACA,IAAIC,cAAa,GAAKD,eAAc,GAAI,IAAI,CAAC/B,UAAU,CAAC8B,MAAK,GAAIC,eAAc,GAAI,IAAI,CAAC/B,UAAU,CAAC8B,MAAO;MAC1G,KAAI,IAAIG,IAAI,CAAC,EAAEA,IAAID,cAAc,EAAEC,CAAC,EAAE,EAAC;QACrC,IAAI,CAAC/B,aAAa,CAACgC,YAAY,CAACP,IAAI,CAAC,IAAI,CAAC3B,UAAU,CAACiC,CAAC,CAAC,CAAC;QACxD;QACA,IAAI,CAAC/B,aAAa,CAACiC,gBAAgB,CAACF,CAAC,IAAI,EAAE;QAC3C,IAAI,CAAC/B,aAAa,CAACgC,YAAY,CAACD,CAAC,CAAC,CAACG,SAAQ,GAAI,EAAE;QACjD,IAAGP,IAAG,IAAK,OAAM,IAAKI,KAAK,CAAC,EAAC;UAC3B,IAAI,CAAC/B,aAAa,CAACmC,aAAY,GAAI,CAAC;UACpC,IAAI,CAACzB,KAAK,CAACnC,WAAW,CAAC6D,OAAO,CAAC,IAAI,CAACtC,UAAU,CAACiC,CAAC,CAAC,EAAEA,CAAC,CAAC;QACvD,CAAC,MAAI;UACH,IAAI,CAACrB,KAAK,CAACnC,WAAW,CAAC8D,SAAS,CAAC,IAAI,CAACvC,UAAU,CAACiC,CAAC,CAAC,EAAEA,CAAC,CAAC;QACzD;MACF;MAGA,IAAG,IAAI,CAAC/B,aAAa,CAACmC,aAAY,IAAK,EAAE,EAAC;QACxC,IAAI,CAACnC,aAAa,CAACmC,aAAY,GAAI,IAAI,CAACnC,aAAa,CAACgC,YAAY,CAAC,CAAC,CAAC,CAACM,EAAE;QACxE,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACvC,aAAa,CAACgC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAACtB,KAAK,CAACpC,iBAAiB,CAACkE,yBAAyB,EAAE;MAC1D;MACA,IAAI,CAACC,YAAY,EAAE;MACnBjC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,aAAa,CAAC;MAC/B;MACA;IACF,CAAC;;IACDuC,iBAAiB,CAACzB,IAAI,EAAE4B,GAAG,EAAC;MAC1B;MACA,IAAI,CAAC1C,aAAa,CAACmC,aAAY,GAAIrB,IAAI,CAACwB,EAAE;MAC1C,IAAI,CAACtC,aAAa,CAAC2C,aAAY,GAAI7B,IAAI,CAAC8B,UAAU;MAClD,IAAI,CAAC5C,aAAa,CAAC6C,WAAU,GAAI/B,IAAI,CAACgC,QAAQ;MAC9C,IAAI,CAAC9C,aAAa,CAAC+C,QAAO,GAAIjC,IAAI,CAACkC,KAAK;MACxC,IAAI,CAAChD,aAAa,CAACiD,SAAQ,GAAInC,IAAI,CAACoC,OAAO;MAC3C,IAAI,CAAClD,aAAa,CAACmD,YAAW,GAAIrC,IAAI,CAACqC,YAAY;;MAEnD;MACA,IAAG,IAAI,CAACnD,aAAa,CAACgC,YAAY,CAACU,GAAG,CAAC,CAACR,SAAQ,IAAKkB,SAAS,EAAC;QAC7D,IAAI,CAACpD,aAAa,CAACgC,YAAY,CAACU,GAAG,CAAC,CAACR,SAAQ,GAAI,EAAE;MACrD;MACA;MACA,IAAG,IAAI,CAAClC,aAAa,CAACgC,YAAY,CAACU,GAAG,CAAC,CAACR,SAAS,CAACN,MAAK,IAAK,KAAKd,IAAI,CAACqC,YAAW,IAAK,GAAG,EAAC;QACxF,IAAIE,OAAM,GAAI;UACZf,EAAC,EAAIxB,IAAI,CAACwB,EAAE;UACZM,UAAS,EAAI9B,IAAI,CAAC8B;QACpB;QACA,IAAI,CAACnD,MAAM,CAACmB,QAAQ,CAAC,qBAAqB,EAAEyC,OAAO,CAAC,CAACxC,IAAI,CAAC,MAAM;UAC9D;UACA,IAAI,CAACb,aAAa,CAACgC,YAAY,CAACU,GAAG,CAAC,CAACR,SAAQ,GAAI,IAAI,CAACjC,WAAW;UACjE,IAAI,CAACwC,YAAY,EAAE;UACnB;UACA;QACF,CAAC,EACAtB,KAAK,CAACC,KAAI,IAAK;UACdZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;QACpB,CAAC,CAAC;MACJ;MAEA,IAAI,CAACV,KAAK,CAAC4C,gBAAgB,CAACC,eAAe,EAAE;MAC7C,IAAI,CAAC7C,KAAK,CAACpC,iBAAiB,CAACkF,MAAM,EAAE;MACrC,IAAI,CAAC9C,KAAK,CAAClC,gBAAgB,CAACiF,YAAY,EAAE;MAC1C,IAAI,CAAC/C,KAAK,CAACjC,gBAAgB,CAACiF,WAAW,EAAE;MACzC,IAAI,CAAChD,KAAK,CAAChC,WAAW,CAACiF,kBAAkB,EAAE;IAE7C,CAAC;IAED1C,aAAa,GAAE;MACb;MACA,IAAG,IAAI,CAACjB,aAAa,CAAC4D,cAAa,IAAK,CAAC,EAAC;QACxC,IAAI,CAAC1C,oBAAoB,CAAC,SAAS,CAAC;QACpC;MACF;MACA;MACA,IAAI2C,IAAG,GAAI,IAAI,CAAC7D,aAAa,CAAC+C,QAAQ,EAAE;MACxC,IAAIe,cAAa,GAAI,IAAI,CAAC9D,aAAa,CAAC8D,cAAc,EAAE;MACxD,IAAIC,KAAI,GAAI,IAAI,CAAC/D,aAAa,CAAC+D,KAAK,EAAE;MACtC,IAAIC,OAAM,GAAI,IAAI,CAAChE,aAAa,CAACgE,OAAO,EAAE;MAC1C,IAAIf,SAAQ,GAAI,IAAI,CAACjD,aAAa,CAACiD,SAAS;MAC5C,IAAIjC,UAAS,GAAI,IAAI,CAAChB,aAAa,CAACgB,UAAU;MAE9C,IAAG,IAAI,CAAClB,UAAU,CAAC8B,MAAK,IAAK,CAAC,EAAC;QAC7BP,KAAK,CAAC,uBAAuB,CAAC;QAC9B,IAAI,CAACrB,aAAa,CAAC4D,cAAa,GAAI,CAAC;QACrC,IAAI,CAAC1C,oBAAoB,CAAC,SAAS,CAAC;QACpC;MACF;MAEA,IAAG+B,SAAQ,IAAK,EAAC,IAAKA,SAAQ,IAAK,IAAI,EAAC;QACtC,IAAGgB,OAAO,CAAEhB,SAAQ,GAAI,eAAe,CAAC,EAAC;UACvC,IAAIiB,OAAM,GAAIjB,SAAS;UACvB,IAAGA,SAAS,CAACkB,UAAU,CAAC,GAAG,CAAC,EAAE;YAC1BlB,SAAQ,GAAI,IAAG,GAAIA,SAAS,CAACmB,SAAS,CAAC,CAAC,CAAC;UAC7C;UACA;UACAnB,SAAQ,GAAIA,SAAS,CAACoB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;UAEvC,KAAI,IAAItC,KAAK,IAAI,CAACjC,UAAU,EAAC;YAC3B,IAAG,IAAI,CAACA,UAAU,CAACiC,CAAC,CAAC,CAACmB,OAAM,IAAKD,SAAS,EAAC;cACzC,IAAI,CAACjD,aAAa,CAAC4D,cAAa,GAAI,CAAC;cACrCvC,KAAK,CAAC6C,OAAM,GAAI,mBAAmB,CAAC;cACpC,IAAI,CAAChD,oBAAoB,CAAC,SAAS,CAAC;cACpC;YACF;UACF;UACA;UACA;UACA;UACA;UACA,IAAImC,OAAM,GAAI;YACZ,SAAS,EAAE;cACT,OAAO,EAAEQ,IAAI;cACb,mBAAkB,EAAIC;YACxB,CAAC;YACD,QAAO,EAAI;cACT,QAAO,EAAIC,KAAK;cAChB,UAAS,EAAIC,OAAO;cACpB,YAAW,EAAI,IAAI,CAACpE,QAAQ,CAACmB;YAC/B,CAAC;YACD,UAAS,EAAI;cACX,SAAQ,EAAIC,UAAU;cACtB,aAAY,EAAIiC;YAClB;UACF;UACAzC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAC4C,OAAO,CAAC;UAClC,IAAI,CAAC5D,MAAM,CAACmB,QAAQ,CAAC,qBAAqB,EAAEyC,OAAO,CAAC,CAACxC,IAAI,CAAC,MAAM;YAC9D;YACA,IAAI,CAACb,aAAa,CAAC4D,cAAa,GAAI,CAAC;YACrCpD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,QAAQ,CAAC;YAC1B,IAAI8E,WAAU,GAAIC,IAAI,CAACC,GAAG,EAAE;YAC5B,IAAIC,KAAI,GAAI,IAAIF,IAAI,CAACD,WAAW,CAAC;YACjC;YACA,IAAII,UAAS,GAAI;cACfvB,YAAW,EAAI,GAAG;cAClBwB,gBAAe,EAAIF,KAAK,CAACG,WAAW,EAAE;cACtChC,UAAS,EAAI,IAAI,CAACpD,QAAQ,CAACoD,UAAU;cACrCiC,OAAM,EAAI7D,UAAU;cACpBkC,OAAM,EAAID,SAAS;cACnBD,KAAI,EAAIa,IAAI;cACZvB,EAAC,EAAI;YACP;YACA,IAAI,CAACxC,UAAU,CAACgF,OAAO,CAACJ,UAAU,CAAC;YACnC,IAAI,CAACxD,oBAAoB,CAAC,OAAO,CAAC;UAEpC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;YACdC,KAAK,CAAC,uBAAuB,CAAC;YAC9Bb,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;UACpB,CAAC,CAAC;QACJ,CAAC,MAAI;UACH,IAAI,CAACpB,aAAa,CAAC4D,cAAa,GAAI,CAAC;UACrC,IAAI,CAAC1C,oBAAoB,CAAC,SAAS,CAAC;QACtC;MACF;IACF,CAAC;IACDtC,UAAU,GAAE;MACV,IAAImG,GAAE,GAAInG,UAAU;MACpB,OAAOmG,GAAG;IACZ;EACF,CAAC;EACDC,OAAO,GAAE;IACP,IAAI,CAACrE,aAAa,EAAE;EACtB;AACF","names":["ConsultNetDiagram","ConsultGuidelines","ConsultChat","ConsultAccptInfo","ConsultCmpltHist","ConsultHist","ConsultSendImgLayer","StringUtil","name","components","data","showLayer","sendImgObj","imgUrl","imgType","consultingList","checkItemId","created","computed","roomInfo","$store","state","alarm","userInfo","auth","consulting","consult","consultTarget","consultHist","renewalToken","methods","showImg","closeImg","sendImg","imgType2","console","log","$refs","getConsulting","dispatch","then","item","loginId","targetName","sendAlarmTalk","setgetConsultingList","catch","error","alert","localStorage","clear","$router","push","path","type","length","showDataListNum","currConsultCnt","i","consultArray","reiveMessgeArray","histArray","currTargetIdx","connect","reConnect","id","getConsoltContent","openConsultGuideTextPopup","$forceUpdate","idx","currConsultId","consult_id","currUserKey","user_key","currTtID","tt_id","targetNum","tel_num","cnvrst_sttus","undefined","payload","ConsultNetDigram","getHdmsDgrmList","getEgl","getAccptInfo","getHistList","getConsultHistList","alarmSendCheck","ttId","svcMainClsCode","sndNm","sndTeam","confirm","custNum","startsWith","substring","replace","timeElapsed","Date","now","today","newConsult","consult_datetime","toUTCString","cust_nm","unshift","obj","mounted"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\views\\pages\\consult\\Consult.vue"],"sourcesContent":["<template>\r\n  <!-- consult -->\r\n  <div class=\"consult\">\r\n    <!-- consult_head : 상담중인 고객 리스트 -->\r\n    <div class=\"consult_head\">\r\n      <dl>\r\n        <dt>상담중인 고객 리스트</dt>\r\n        <dd>\r\n          <ul>\r\n            <li v-for=\"(item, idx) in consultTarget.consultArray\" \r\n              :key=\"idx\" \r\n              :id=\"'consult_id_' + item.id\"\r\n              :class=\"item.id == consultTarget.currTargetIdx ? 'curr' : ''\" \r\n              @click=\"item.id != consultTarget.currTargetIdx ? getConsoltContent(item, idx) : ''\" \r\n            >\r\n              <span :class=\"'bg_st_' + item.cnvrst_sttus\" :title=\"item.consult_id\">\r\n                {{ item.cnvrst_sttus == 'S' ? '상담보류' : (item.cnvrst_sttus == 'A' ? '진행중' : '대기중')}}\r\n              </span>\r\n              {{item.cust_nm != null ? StringUtil().cusNmFormatter(item.cust_nm) : '이름없음' }}\r\n            </li>\r\n          </ul>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n    <!--// consult_head -->\r\n    <!-- Left Group -->\r\n    <div class=\"group\" style=\"position: relative;\">\r\n      <!-- ConsultNetDiagram : 댁내 망구성도 -->\r\n      <consult-net-diagram ref=\"ConsultNetDigram\" />\r\n      <!--// ConsultNetDiagram -->\r\n      <!-- ConsultGuidelines : AI 가이드라인 -->\r\n      <consult-guidelines @showImg=\"showImg\" ref=\"ConsultGuidelines\" />\r\n      <!--// ConsultGuidelines -->\r\n    </div>\r\n    <!--// Left Group -->\r\n\r\n    <!-- Center Group -->\r\n    <div class=\"group\">\r\n      <!-- ConsultChat : 메인 채팅창 : #TODO : 탭 구성하고 반복문 돌려야 될 듯-->\r\n      <consult-chat ref=\"ConsultChat\" @getConsulting=\"getConsulting\" @showImg=\"showImg\"  />\r\n      <!--// ConsultChat -->\r\n    </div>\r\n    <!--// Center Group -->\r\n\r\n    <!-- Right Group -->\r\n    <div class=\"group\">\r\n      <!-- ConsultAccptInfo : 고장접수 정보 -->\r\n      <consult-accpt-info ref=\"ConsultAccptInfo\" />\r\n      <!--// ConsultAccptInfo -->\r\n      <!-- ConsultCmpltHist : 고장이력 정보 -->\r\n      <consult-cmplt-hist ref=\"ConsultCmpltHist\" />\r\n      <!--// ConsultCmpltHist -->\r\n      <!-- ConsultHist : 비대면 응대이력 -->\r\n      <consult-hist ref=\"ConsultHist\"/>\r\n      <!--// ConsultHist -->\r\n    </div>\r\n    <!--// Right Group -->\r\n  </div>\r\n  <!--// consult -->\r\n  <!-- layer : layer ccomponents 호출 영역 -->\r\n  <div class=\"img_layer\" v-if=\"showLayer\">\r\n    <consult-send-img-layer @closeImg=\"closeImg\" @sendImg=\"sendImg\" :childValue=\"sendImgObj\"/>\r\n  </div>\r\n  <!--// layer -->\r\n  \r\n  \r\n</template>\r\n\r\n<script>\r\n  import ConsultNetDiagram from './ConsultNetDiagram'; // 댁내 망구성도\r\n  import ConsultGuidelines from './ConsultGuidelines'; // AI 가이드라인\r\n  import ConsultChat from './ConsultChat'; // 메인 채팅창\r\n  import ConsultAccptInfo from './ConsultAccptInfo'; // 고장접수 정보\r\n  import ConsultCmpltHist from './ConsultCmpltHist'; // 고장이력 정보\r\n  import ConsultHist from './ConsultHist'; // 비대면 응대이력\r\n  // ** Layer ** //\r\n  import ConsultSendImgLayer from './layer/ConsultSendImgLayer'; // AI 가이드라인 이미지 Layer\r\n  import StringUtil from '../../../utils/StringUtil';\r\n  //import ConsultGuideTextPopup from './popup/ConsultGuideTextPopup' ; //상세가이드 팝업\r\n\r\n  export default {\r\n    name: 'App',\r\n    components: {\r\n      ConsultNetDiagram, // 댁내 망구성도\r\n      ConsultGuidelines, // AI 가이드라인\r\n      ConsultChat, // 메인 채팅창\r\n      ConsultAccptInfo, // 고장접수 정보\r\n      ConsultCmpltHist, // 고장이력 정보\r\n      ConsultHist, // 비대면 응대이력\r\n      ConsultSendImgLayer, \r\n      // AI 가이드라인 이미지 호출\r\n     // ConsultGuideTextPopup //상세 가이드 팝업\r\n    },\r\n    data() {\r\n      return {\r\n        showLayer : false,\r\n        sendImgObj : {\r\n          imgUrl : \"\",\r\n          imgType : \"\"\r\n        },\r\n        consultingList : [],\r\n        checkItemId : \"\"\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    computed: {\r\n      roomInfo() {\r\n        return this.$store.state.alarm.roomInfo;\r\n      },\r\n      userInfo() {\r\n      // 로그인 사용자 정보\r\n        return this.$store.state.auth.userInfo;\r\n      },\r\n      consulting() {\r\n        return this.$store.state.consult.consulting\r\n      },\r\n      consultTarget() {\r\n      // 로그인 사용자 정보\r\n        return this.$store.state.consult.consultTarget;\r\n      },\r\n      consultHist(){\r\n        return this.$store.state.consult.consultHist;\r\n      },\r\n      renewalToken(){\r\n        return this.$store.state.auth.renewalToken;\r\n      }\r\n    },\r\n    methods: {\r\n      showImg(imgUrl, imgType){\r\n        this.sendImgObj.imgUrl = imgUrl;\r\n        this.sendImgObj.imgType = imgType;\r\n        this.showLayer = true;\r\n      },\r\n      closeImg(){\r\n        this.showLayer = false; \r\n      },\r\n      sendImg(imgType2){\r\n        console.log(this.sendImgObj.imgUrl);\r\n        this.$refs.ConsultChat.sendImg(this.sendImgObj.imgUrl, this.sendImgObj.imgType, imgType2);\r\n        this.closeImg();\r\n      },\r\n      getConsulting() {\r\n        // 토큰 갱신 확인 후 로직 진행\r\n        this.$store.dispatch(\"auth/renewalToken\").then(() => {     \r\n          if(this.renewalToken.data){\r\n            // this.consulting init\r\n            this.consulting = []\r\n            // TTID 조회\r\n            let item = this.userInfo.loginId;\r\n            this.$store.dispatch(\"consult/consulting\", item).then(() => {\r\n              // 초기화\r\n              // 알림톡 전송 (로직 선 처리)\r\n              let targetName = this.consultTarget.targetName;\r\n              if(targetName != null && targetName != ''){\r\n                this.sendAlarmTalk();\r\n              }else{\r\n                this.setgetConsultingList('setting');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n          }else{\r\n            alert(\"로그인이 만료되었습니다. 다시 로그인해주세요.\");\r\n            // localStorage 초기화\r\n            localStorage.clear();\r\n            // logout 호출\r\n            this.$store.dispatch(\"auth/signout\").then(() => {            \r\n              // 로그아웃 성공\r\n              this.$router.push({path:'/login'});\r\n            })\r\n            .catch(error => {\r\n              // 로그아웃 호출 실패. 로그인 페이지로 이동\r\n              console.log(error);\r\n              this.$router.push({path:'/login'});\r\n            });\r\n          }\r\n        })\r\n    \r\n      },\r\n      setgetConsultingList(type){\r\n        if(this.consulting.length == 0){\r\n          alert(\"진행중인 상담이 없습니다.\");\r\n        }\r\n        // 기준값\r\n        let showDataListNum = 5;\r\n        // 기준값 리스트값 비교 후 신규 배열 생성\r\n        let currConsultCnt = (showDataListNum < this.consulting.length ? showDataListNum : this.consulting.length);\r\n        for(let i = 0; i < currConsultCnt; i++){\r\n          this.consultTarget.consultArray.push(this.consulting[i]);\r\n          //this.consultTarget.socketArray[i] = [];\r\n          this.consultTarget.reiveMessgeArray[i] = [];\r\n          this.consultTarget.consultArray[i].histArray = [];\r\n          if(type == 'alarm' && i == 0){\r\n            this.consultTarget.currTargetIdx = 0;\r\n            this.$refs.ConsultChat.connect(this.consulting[i], i);\r\n          }else{\r\n            this.$refs.ConsultChat.reConnect(this.consulting[i], i);\r\n          }\r\n        }\r\n\r\n        \r\n        if(this.consultTarget.currTargetIdx == \"\"){\r\n          this.consultTarget.currTargetIdx = this.consultTarget.consultArray[0].id;\r\n          this.getConsoltContent(this.consultTarget.consultArray[0], 0);\r\n          this.$refs.ConsultGuidelines.openConsultGuideTextPopup();\r\n        }\r\n        this.$forceUpdate();\r\n        console.log(this.consultTarget);\r\n        // this.$refs.ConsultChat.reConnect(item);\r\n        // 신규 배열 생성되면 생성된 수 만큼 소캣 연결\r\n      },\r\n      getConsoltContent(item, idx){\r\n        // 현재 상담 세팅\r\n        this.consultTarget.currTargetIdx = item.id;\r\n        this.consultTarget.currConsultId = item.consult_id;\r\n        this.consultTarget.currUserKey = item.user_key;\r\n        this.consultTarget.currTtID = item.tt_id;\r\n        this.consultTarget.targetNum = item.tel_num;\r\n        this.consultTarget.cnvrst_sttus = item.cnvrst_sttus;\r\n\r\n        // histArray가 없을 경우 histArray 세팅\r\n        if(this.consultTarget.consultArray[idx].histArray == undefined){\r\n          this.consultTarget.consultArray[idx].histArray = [];\r\n        }\r\n        // histArray에 내용이 없고 대기중이 아닐시 consultHist 조회\r\n        if(this.consultTarget.consultArray[idx].histArray.length == 0 && item.cnvrst_sttus != \"W\"){\r\n          let payload = {\r\n            id : item.id,\r\n            consult_id : item.consult_id,\r\n          }\r\n          this.$store.dispatch(\"consult/consultHist\", payload).then(() => {\r\n            // console.log(this.consultHist);\r\n            this.consultTarget.consultArray[idx].histArray = this.consultHist;\r\n            this.$forceUpdate();\r\n            //this.$refs.ConsultChat.reConnect(item);\r\n            //d84e77c4ee0a4e779e4055dcc959d579\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n\r\n        this.$refs.ConsultNetDigram.getHdmsDgrmList();\r\n        this.$refs.ConsultGuidelines.getEgl();\r\n        this.$refs.ConsultAccptInfo.getAccptInfo();\r\n        this.$refs.ConsultCmpltHist.getHistList();\r\n        this.$refs.ConsultHist.getConsultHistList();\r\n\r\n      },\r\n\r\n      sendAlarmTalk(){\r\n        // 알림톡 전달\r\n        if(this.consultTarget.alarmSendCheck == 0){\r\n          this.setgetConsultingList('setting');\r\n          return;\r\n        }\r\n        // 스토리지 저장 방식 다 바꿔야함\r\n        let ttId = this.consultTarget.currTtID; // localStorage.getItem('ttId');\r\n        let svcMainClsCode = this.consultTarget.svcMainClsCode; // localStorage.getItem('svcMainClsCode'); \r\n        let sndNm = this.consultTarget.sndNm; // localStorage.getItem('sndNm'); \r\n        let sndTeam = this.consultTarget.sndTeam; // localStorage.getItem('sndTeam');\r\n        let targetNum = this.consultTarget.targetNum;\r\n        let targetName = this.consultTarget.targetName;\r\n\r\n        if(this.consulting.length >= 5){\r\n          alert(\"최대 5명까지 상담 진행이 가능합니다.\");\r\n          this.consultTarget.alarmSendCheck = 0;\r\n          this.setgetConsultingList('setting');\r\n          return;\r\n        }\r\n\r\n        if(targetNum != \"\" && targetNum != null){\r\n          if(confirm( targetNum + \"로 알림톡을 발송합니다.\")){\r\n            let custNum = targetNum;\r\n            if(targetNum.startsWith(\"0\")) {\r\n                targetNum = \"82\" + targetNum.substring(1);\r\n            }\r\n            // - 제거\r\n            targetNum = targetNum.replace(/-/g, '');\r\n\r\n            for(let i in this.consulting){\r\n              if(this.consulting[i].tel_num == targetNum){\r\n                this.consultTarget.alarmSendCheck = 0;\r\n                alert(custNum + \"으로 이미 상담이 진행중입니다.\");\r\n                this.setgetConsultingList('setting');\r\n                return;\r\n              }\r\n            }\r\n            // let payload = {\r\n            //   \"to\": num\r\n            // };\r\n            //20230309 정민규 수정                 \r\n            let payload = {\r\n              \"trouble\": {\r\n                \"tt_id\": ttId,\r\n                \"svc_main_cls_code\" : svcMainClsCode\r\n              },\r\n              \"sender\" : {\r\n                \"snd_nm\" : sndNm,\r\n                \"snd_team\" : sndTeam,\r\n                \"snd_cmp_no\" : this.userInfo.loginId\r\n              },\r\n              \"customer\" : {\r\n                \"cust_nm\" : targetName,\r\n                \"cust_tel_no\" : targetNum\r\n              }\r\n            } \r\n            console.log(\"알림톡 발송 파람::\",payload);\r\n            this.$store.dispatch(\"alarm/sendAlarmTalk\", payload).then(() => {            \r\n              // 알림톡 -> 전환 관련 처리\r\n              this.consultTarget.alarmSendCheck = 0;\r\n              console.log(this.roomInfo);\r\n              let timeElapsed = Date.now();\r\n              let today = new Date(timeElapsed);\r\n              // 상담중인 고객 리스트 추가\r\n              let newConsult = {\r\n                cnvrst_sttus : 'W',\r\n                consult_datetime : today.toUTCString(),\r\n                consult_id : this.roomInfo.consult_id,\r\n                cust_nm : targetName,\r\n                tel_num : targetNum,\r\n                tt_id : ttId,\r\n                id : 0\r\n              }\r\n              this.consulting.unshift(newConsult);\r\n              this.setgetConsultingList('alarm');\r\n              \r\n            })\r\n            .catch(error => {\r\n              alert(\"알림톡이 발송실패. - 서버 응답 없음\");\r\n              console.log(error);\r\n            });\r\n          }else{\r\n            this.consultTarget.alarmSendCheck = 0;\r\n            this.setgetConsultingList('setting');\r\n          }\r\n        }\r\n      },\r\n      StringUtil(){\r\n        var obj = StringUtil;\r\n        return obj;        \r\n      }\r\n    },\r\n    mounted(){ \r\n      this.getConsulting();\r\n    }\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}