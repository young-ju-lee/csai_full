{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contents\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"content_box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LayoutHeader = _resolveComponent(\"LayoutHeader\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_LayoutHeader), _createElementVNode(\"div\", _hoisted_1, [this.userInfo.loginId != null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_router_view)])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAEOA,KAAK,EAAC;AAAU;;;EACdA,KAAK,EAAC;;;;;6DAFbC,aAAgBC,0BAChBC,oBAIM,OAJNC,UAIM,QAHgCC,QAAQ,CAACC,OAAO,0BAApDC,oBAEM,OAFNC,UAEM,GADJP,aAA2BQ","names":["class","_createVNode","_component_LayoutHeader","_createElementVNode","_hoisted_1","userInfo","loginId","_createElementBlock","_hoisted_2","_component_router_view"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\layouts\\PageLayout.vue"],"sourcesContent":["<template>\r\n  <LayoutHeader />\r\n  <div class=\"contents\">\r\n    <div class=\"content_box\" v-if=\"this.userInfo.loginId != null\">\r\n      <router-view></router-view>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LayoutHeader from '@/components/layout/LayoutHeader.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components : {\r\n    LayoutHeader,\r\n  },\r\n  computed: {\r\n    userInfo() {\r\n      // 로그인 성공 여부 & 에러 메시지\r\n      return this.$store.state.auth.userInfo;\r\n    }\r\n  },\r\n  created(){\r\n    // 1차적으로 login 확인(UI 접근 차단). 토큰 만료시 서버에서 로그인으로 리다이렉트  \r\n    this.$store.dispatch(\"auth/userInfo\").then(() => {            \r\n    \r\n    // 일단 호출 먼저 진행\r\n    if(this.userInfo == null){\r\n      alert(\"로그인이 필요합니다.\");\r\n      this.$router.push({path:'/login'});\r\n    }\r\n    // 실패하던 성공하던 한번만 세팅 되어야함\r\n    }).catch(error => {\r\n      // userInfo 호출 실패\r\n      console.log(error);\r\n      // 실패하던 성공하던 한번만 세팅 되어야함\r\n    });\r\n  },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}