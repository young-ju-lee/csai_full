{"ast":null,"code":"/* eslint-disable */\n\nconst Arcfour = function () {\n  function Arcfour() {\n    this.i = 0;\n    this.j = 0;\n    this.S = new Array();\n  }\n\n  // Initialize arcfour context from key, an array of ints, each from [0..255]\n  function ARC4init(key) {\n    var i, j, t;\n    for (i = 0; i < 256; ++i) {\n      this.S[i] = i;\n    }\n    j = 0;\n    for (i = 0; i < 256; ++i) {\n      j = j + this.S[i] + key[i % key.length] & 255;\n      t = this.S[i];\n      this.S[i] = this.S[j];\n      this.S[j] = t;\n    }\n    this.i = 0;\n    this.j = 0;\n  }\n  function ARC4next() {\n    var t;\n    this.i = this.i + 1 & 255;\n    this.j = this.j + this.S[this.i] & 255;\n    t = this.S[this.i];\n    this.S[this.i] = this.S[this.j];\n    this.S[this.j] = t;\n    return this.S[t + this.S[this.i] & 255];\n  }\n  Arcfour.prototype.init = ARC4init;\n  Arcfour.prototype.next = ARC4next;\n  // Plug in your RNG constructor here\n  function prng_newstate() {\n    return new Arcfour();\n  }\n\n  // Pool size must be a multiple of 4 and greater than 32.\n  // An array of bytes the size of the pool will be passed to init()\n  // var rng_psize = 256;\n  return prng_newstate();\n}();\nconsole.log('Arcfour', Arcfour);\nif (typeof module === 'object' && module.exports) {\n  module.exports = Arcfour;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}