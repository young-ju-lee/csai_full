{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import guide from '@/store/modules/guide';\nexport default {\n  name: 'ConsultGuidelines',\n  emits: [\"showImg\"],\n  data() {\n    return {\n      on_main_num: 0,\n      on_sub_num: 0,\n      next_show: true,\n      checkNone: false,\n      done: 0,\n      go_reason: \"\",\n      show_go_reason: false,\n      errorTxt: \"\",\n      errorImgList: []\n    };\n  },\n  created() {},\n  computed: {\n    eglList() {\n      return this.$store.state.guide.eglList;\n    },\n    roomInfo() {\n      return this.$store.state.alarm.roomInfo;\n    },\n    consultDone() {\n      return this.$store.state.consult.consultDone;\n    },\n    consultTarget() {\n      // 로그인 사용자 정보\n      return this.$store.state.consult.consultTarget;\n    }\n  },\n  methods: {\n    getEgl() {\n      // 초기화.\n      let target = document.querySelectorAll(\".guideNoneImg\");\n      for (let j in target) {\n        if (!isNaN(j)) target[j].classList.remove(\"guideNoneImg\");\n      }\n      this.on_main_num = 0;\n      this.on_sub_num = 0;\n      // TTID로 조회\n      let item = this.consultTarget.currTtID; //localStorage.getItem('ttId'); //\"2023031600000013\";\n      this.$store.dispatch(\"guide/egl\", item).then(() => {\n        if (this.eglList.guide_lines.length > 0) {\n          console.log(this.eglList);\n          this.checkNone = false;\n          this.$forceUpdate();\n          // 신규로 추가된 이미지 에러 안나는 부분 처리 추가\n          if (this.errorImgList.length != 0) {\n            for (let i in this.errorImgList) {\n              let target = document.querySelectorAll(\".img_group_\" + this.errorImgList[i] + \" > div\");\n              for (let j in target) {\n                if (!isNaN(j)) target[j].classList.add(\"guideNoneImg\");\n              }\n            }\n          }\n        } else {\n          this.checkNone = true;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    nextEgl() {\n      // eslint-disable-next-line\n      //debugger;\n      if (this.on_sub_num + 1 < this.eglList.guide_lines[this.on_main_num].guides.length) {\n        this.on_sub_num++;\n      } else {\n        if (this.eglList.guide_lines[this.on_main_num + 1] != undefined) {\n          this.on_sub_num = 0;\n          this.on_main_num++;\n        } else {\n          //this.next_show = false;\n          // 초기화 시키는 로직\n          this.on_sub_num = 0;\n          this.on_main_num = 0;\n        }\n      }\n    },\n    changeMainNum(idx) {\n      this.on_sub_num = 0;\n      this.on_main_num = idx;\n    },\n    changeSubNum(idx) {\n      this.on_sub_num = idx;\n    },\n    changeScroll(idx) {\n      if (idx > 5) {\n        document.getElementById(\"on_main_\" + this.on_main_num).scrollTop = idx > 5 ? (idx - 5) * 40 : 0;\n      } else {\n        document.getElementById(\"on_main_\" + this.on_main_num).scrollTop = 0;\n      }\n    },\n    showImg(value, type) {\n      console.log(value);\n      this.$emit('showImg', value, type);\n    },\n    showGoReason() {\n      this.show_go_reason = true;\n    },\n    closeGoReason() {\n      this.errorTxt = \"\";\n      this.go_reason = \"\";\n      document.getElementById(\"go_reason\").value = \"\";\n      this.show_go_reason = false;\n    },\n    //https://dev.ap.csai.kt.co.kr:8080/api/consult/done\n    btnConsultDone(value) {\n      // 상담 진행 여부 판단 필요.\n      // 출동 사유 글자수 확인\n      this.go_reason = document.getElementById(\"go_reason\").value;\n      if (value == \"Y\" && this.go_reason.length > 1000) {\n        this.errorTxt = \"1000글자 이하로 작성 가능합니다. (\" + this.go_reason.length + \"/1000)\";\n        return;\n      }\n      let doneTypeName = value == 'Y' ? \"출동 요청\" : \"무출동 처리 완료\";\n      if (confirm(doneTypeName + \" 하시겠습니까? 완료시 상담이 종료됩니다.\")) {\n        // AI 조치 가이드 코드 생성\n        let fileCode = \"\";\n        if (this.eglList.guide_lines[this.on_main_num].guides[this.on_sub_num].file != null) {\n          fileCode = this.eglList.guide_lines[this.on_main_num].guides[this.on_sub_num].file.split(\"_\");\n          fileCode = fileCode[0] + '_' + fileCode[fileCode.length - 1];\n        }\n        let item = {\n          consult_id: this.consultTarget.currConsultId,\n          last_guide_code: fileCode,\n          scn: this.eglList.guide_lines[this.on_main_num].guides[this.on_sub_num].scn,\n          go_reason: this.go_reason,\n          go_yn: value\n        };\n        // 출동 또는 무출동 처리 완료\n        this.$store.dispatch(\"consult/consultDone\", item).then(() => {\n          if (this.consultDone.errorCode == null) {\n            // 상담 초기화\n            this.consultTarget.consultArray = [];\n            alert(doneTypeName + \", 상담이 종료되었습니다.\");\n            this.$router.push({\n              path: '/alarm'\n            });\n          } else {\n            alert(this.consultDone.message);\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    hideErrorImg(idx) {\n      if (this.errorImgList.indexOf(idx) == -1) {\n        this.errorImgList.push(idx);\n        console.log(this.errorImgList);\n      }\n      // 동일한 이미지 포함 전체 처리\n      let target = document.querySelectorAll(\".img_group_\" + idx + \" > div\");\n      for (let j in target) {\n        if (!isNaN(j)) target[j].classList.add(\"guideNoneImg\");\n      }\n    },\n    openConsultGuideTextPopup() {\n      let rigthPosition = document.body.offsetWidth - 730;\n      rigthPosition += window.screenLeft;\n      let options = \"top=10, left=\" + rigthPosition + \", width=900, height=900, status=no, menubar=no, toolbar=no, resizable=no\";\n      window.open(\"/popup/ConsultGuideTextPopup?ttId=\" + this.consultTarget.currTtID + \"&main=\" + this.on_main_num + \"&sub=\" + this.on_sub_num, \"ConsultHdmsResultInfoPopup\", options);\n    }\n  },\n  updated() {\n    if (document.getElementById(\"on_main_\" + this.on_main_num) != null) {\n      this.changeScroll(this.on_sub_num);\n    }\n    // 다음 조치. class 처리\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}