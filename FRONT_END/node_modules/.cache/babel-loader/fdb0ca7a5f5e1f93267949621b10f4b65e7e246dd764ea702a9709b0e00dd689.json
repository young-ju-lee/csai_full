{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoginForm from './LoginForm.vue';\nimport LoginOtp from './LoginOtp.vue';\nexport default {\n  name: 'App',\n  components: {\n    LoginForm,\n    LoginOtp\n  },\n  data() {\n    return {\n      uiToggleNum: 1,\n      // #TOFIX 임시 화면 전환용\n      devtest: false // #TODEL 개발 완료시 삭제 필요\n    };\n  },\n\n  computed: {\n    userLoginData() {\n      // 로그인 성공 여부 & 에러 메시지\n      return this.$store.state.auth.userLoginData;\n    },\n    userInfo() {\n      // 로그인 성공 여부 & 에러 메시지\n      return this.$store.state.auth.userInfo;\n    }\n  },\n  created() {\n    // #TODEL test용 - 기본값 false\n\n    if (process.env.VUE_APP_MODE == \"test\") {\n      this.devtest = true;\n    }\n  },\n  methods: {\n    // Login - Otp 화면 전환\n    setUiToggleNum(num, type) {\n      // 화면 none-block 처리\n      this.uiToggleNum = num;\n      if (type == \"pass\") {\n        // OTP 화면 전환시\n        if (this.uiToggleNum == 2) {\n          // if : OTP(2) 화면일 경우 검증 로직 실행\n          if (this.userLoginData.resultCode != 1) {\n            // if : Login 성공이 아닌 상태에서 진입 시\n            // 로그인 UI로 다시 변경\n            alert(\"잘못된 접근입니다.\");\n            this.uiToggleNum = 1;\n          }\n        }\n      }\n    },\n    loginChecker() {\n      this.$store.dispatch(\"auth/userInfo\").then(() => {\n        if (this.userInfo != null) {\n          this.$router.push({\n            path: '/alarm'\n          });\n        }\n      }).catch(error => {\n        // userInfo 호출 실패\n        console.log(error);\n        // 실패하던 성공하던 한번만 세팅 되어야함\n      });\n    }\n  },\n\n  mounted() {\n    // 기존 로그인 확인\n    this.loginChecker();\n  }\n};","map":{"version":3,"mappings":";AAyBA,OAAOA,SAAQ,MAAO,iBAAiB;AACvC,OAAOC,QAAO,MAAO,gBAAgB;AAErC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,SAAS;IACTC;EACF,CAAC;EACDG,IAAI,GAAG;IACL,OAAO;MACLC,WAAU,EAAI,CAAC;MAAE;MACjBC,OAAM,EAAI,KAAK,CAAE;IACnB;EACF,CAAC;;EACDC,QAAQ,EAAE;IACRC,aAAa,GAAG;MACd;MACA,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACH,aAAa;IAC7C,CAAC;IACDI,QAAQ,GAAG;MACb;MACA,OAAO,IAAI,CAACH,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ;IACtC;EACA,CAAC;EACDC,OAAO,GAAG;IACR;;IAEA,IAAGC,OAAO,CAACC,GAAG,CAACC,YAAW,IAAK,MAAM,EAAC;MACpC,IAAI,CAACV,OAAM,GAAI,IAAI;IACrB;EACF,CAAC;EACDW,OAAO,EAAE;IACP;IACAC,cAAc,CAACC,GAAE,EAAIC,IAAI,EAAE;MACzB;MACA,IAAI,CAACf,WAAU,GAAIc,GAAE;MAErB,IAAGC,IAAG,IAAK,MAAM,EAAC;QAChB;QACA,IAAG,IAAI,CAACf,WAAU,IAAK,CAAC,EAAC;UACvB;UACA,IAAG,IAAI,CAACG,aAAa,CAACa,UAAS,IAAK,CAAC,EAAC;YACpC;YACA;YACAC,KAAK,CAAC,YAAY,CAAC;YACnB,IAAI,CAACjB,WAAU,GAAI,CAAC;UACtB;QACF;MACF;IACF,CAAC;IACDkB,YAAY,GAAE;MACZ,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,eAAe,CAAC,CAACC,IAAI,CAAC,MAAM;QAC/C,IAAG,IAAI,CAACb,QAAO,IAAK,IAAI,EAAC;UACvB,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC;YAACC,IAAI,EAAC;UAAQ,CAAC,CAAC;QACpC;MACF,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;QAChB;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EACDG,OAAO,GAAE;IACP;IACA,IAAI,CAACV,YAAY,EAAE;EACrB;AACF","names":["LoginForm","LoginOtp","name","components","data","uiToggleNum","devtest","computed","userLoginData","$store","state","auth","userInfo","created","process","env","VUE_APP_MODE","methods","setUiToggleNum","num","type","resultCode","alert","loginChecker","dispatch","then","$router","push","path","catch","error","console","log","mounted"],"sourceRoot":"","sources":["C:\\CSAI_Front\\src\\views\\pages\\auth\\Login.vue"],"sourcesContent":["<template>\r\n  <!-- login_box -->\r\n\t<div class=\"login_box\">\r\n    <!-- login_visual -->\r\n    <div class=\"login_visual\">\r\n      <div class=\"logo\">\r\n        <img src=\"@/assets/images/img_logo_01.png\" alt=\"Kt OSS\">\r\n        <p>AI 비대면 자가조치</p>\r\n      </div>\r\n    </div>\r\n    <!--// login_visual -->\r\n\r\n    <!-- login_form -->\r\n    <div class=\"login_form\">\r\n\t\t\t<div class=\"form_box\">\r\n        <login-form v-if=\"this.uiToggleNum == 1\" @setUiToggleNum=\"setUiToggleNum\" />\r\n        <login-otp v-if=\"this.uiToggleNum == 2\" @setUiToggleNum=\"setUiToggleNum\" />\r\n      </div>\r\n    </div>\r\n    <!--// login_form -->\r\n  </div>\r\n\t<!--// login_box -->\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './LoginForm.vue';\r\nimport LoginOtp from './LoginOtp.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    LoginOtp\r\n  },\r\n  data() {\r\n    return {\r\n      uiToggleNum : 1, // #TOFIX 임시 화면 전환용\r\n      devtest : false, // #TODEL 개발 완료시 삭제 필요\r\n    }\r\n  },\r\n  computed: {\r\n    userLoginData() {\r\n      // 로그인 성공 여부 & 에러 메시지\r\n      return this.$store.state.auth.userLoginData;\r\n    },\r\n    userInfo() {\r\n\t\t// 로그인 성공 여부 & 에러 메시지\r\n\t\treturn this.$store.state.auth.userInfo;\r\n\t\t}\r\n  },\r\n  created() {\r\n    // #TODEL test용 - 기본값 false\r\n\r\n    if(process.env.VUE_APP_MODE == \"test\"){\r\n      this.devtest = true;\r\n    }\r\n  },\r\n  methods: {\r\n    // Login - Otp 화면 전환\r\n    setUiToggleNum(num , type) {\r\n      // 화면 none-block 처리\r\n      this.uiToggleNum = num\r\n\r\n      if(type == \"pass\"){\r\n        // OTP 화면 전환시\r\n        if(this.uiToggleNum == 2){\r\n          // if : OTP(2) 화면일 경우 검증 로직 실행\r\n          if(this.userLoginData.resultCode != 1){\r\n            // if : Login 성공이 아닌 상태에서 진입 시\r\n            // 로그인 UI로 다시 변경\r\n            alert(\"잘못된 접근입니다.\");\r\n            this.uiToggleNum = 1;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    loginChecker(){\r\n      this.$store.dispatch(\"auth/userInfo\").then(() => {            \r\n        if(this.userInfo != null){\r\n          this.$router.push({path:'/alarm'});\r\n        }\r\n      }).catch(error => {\r\n        // userInfo 호출 실패\r\n        console.log(error);\r\n        // 실패하던 성공하던 한번만 세팅 되어야함\r\n      });\r\n    },\r\n  },\r\n  mounted(){\r\n    // 기존 로그인 확인\r\n    this.loginChecker();\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}